//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ButterflyValveAPI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Butterfly_Valve_DimensionsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Butterfly_Valve_DimensionsDataSet : global::System.Data.DataSet {
        
        private ArmDimensionsDataTable tableArmDimensions;
        
        private BodyDimensionsDataTable tableBodyDimensions;
        
        private NutDimensionsDataTable tableNutDimensions;
        
        private PlateDimensionsDataTable tablePlateDimensions;
        
        private RetainerDimensionsDataTable tableRetainerDimensions;
        
        private ScrewDimensionsDataTable tableScrewDimensions;
        
        private ShaftDimensionsDataTable tableShaftDimensions;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Butterfly_Valve_DimensionsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected Butterfly_Valve_DimensionsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ArmDimensions"] != null)) {
                    base.Tables.Add(new ArmDimensionsDataTable(ds.Tables["ArmDimensions"]));
                }
                if ((ds.Tables["BodyDimensions"] != null)) {
                    base.Tables.Add(new BodyDimensionsDataTable(ds.Tables["BodyDimensions"]));
                }
                if ((ds.Tables["NutDimensions"] != null)) {
                    base.Tables.Add(new NutDimensionsDataTable(ds.Tables["NutDimensions"]));
                }
                if ((ds.Tables["PlateDimensions"] != null)) {
                    base.Tables.Add(new PlateDimensionsDataTable(ds.Tables["PlateDimensions"]));
                }
                if ((ds.Tables["RetainerDimensions"] != null)) {
                    base.Tables.Add(new RetainerDimensionsDataTable(ds.Tables["RetainerDimensions"]));
                }
                if ((ds.Tables["ScrewDimensions"] != null)) {
                    base.Tables.Add(new ScrewDimensionsDataTable(ds.Tables["ScrewDimensions"]));
                }
                if ((ds.Tables["ShaftDimensions"] != null)) {
                    base.Tables.Add(new ShaftDimensionsDataTable(ds.Tables["ShaftDimensions"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ArmDimensionsDataTable ArmDimensions {
            get {
                return this.tableArmDimensions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BodyDimensionsDataTable BodyDimensions {
            get {
                return this.tableBodyDimensions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NutDimensionsDataTable NutDimensions {
            get {
                return this.tableNutDimensions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PlateDimensionsDataTable PlateDimensions {
            get {
                return this.tablePlateDimensions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RetainerDimensionsDataTable RetainerDimensions {
            get {
                return this.tableRetainerDimensions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ScrewDimensionsDataTable ScrewDimensions {
            get {
                return this.tableScrewDimensions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShaftDimensionsDataTable ShaftDimensions {
            get {
                return this.tableShaftDimensions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Butterfly_Valve_DimensionsDataSet cln = ((Butterfly_Valve_DimensionsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ArmDimensions"] != null)) {
                    base.Tables.Add(new ArmDimensionsDataTable(ds.Tables["ArmDimensions"]));
                }
                if ((ds.Tables["BodyDimensions"] != null)) {
                    base.Tables.Add(new BodyDimensionsDataTable(ds.Tables["BodyDimensions"]));
                }
                if ((ds.Tables["NutDimensions"] != null)) {
                    base.Tables.Add(new NutDimensionsDataTable(ds.Tables["NutDimensions"]));
                }
                if ((ds.Tables["PlateDimensions"] != null)) {
                    base.Tables.Add(new PlateDimensionsDataTable(ds.Tables["PlateDimensions"]));
                }
                if ((ds.Tables["RetainerDimensions"] != null)) {
                    base.Tables.Add(new RetainerDimensionsDataTable(ds.Tables["RetainerDimensions"]));
                }
                if ((ds.Tables["ScrewDimensions"] != null)) {
                    base.Tables.Add(new ScrewDimensionsDataTable(ds.Tables["ScrewDimensions"]));
                }
                if ((ds.Tables["ShaftDimensions"] != null)) {
                    base.Tables.Add(new ShaftDimensionsDataTable(ds.Tables["ShaftDimensions"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableArmDimensions = ((ArmDimensionsDataTable)(base.Tables["ArmDimensions"]));
            if ((initTable == true)) {
                if ((this.tableArmDimensions != null)) {
                    this.tableArmDimensions.InitVars();
                }
            }
            this.tableBodyDimensions = ((BodyDimensionsDataTable)(base.Tables["BodyDimensions"]));
            if ((initTable == true)) {
                if ((this.tableBodyDimensions != null)) {
                    this.tableBodyDimensions.InitVars();
                }
            }
            this.tableNutDimensions = ((NutDimensionsDataTable)(base.Tables["NutDimensions"]));
            if ((initTable == true)) {
                if ((this.tableNutDimensions != null)) {
                    this.tableNutDimensions.InitVars();
                }
            }
            this.tablePlateDimensions = ((PlateDimensionsDataTable)(base.Tables["PlateDimensions"]));
            if ((initTable == true)) {
                if ((this.tablePlateDimensions != null)) {
                    this.tablePlateDimensions.InitVars();
                }
            }
            this.tableRetainerDimensions = ((RetainerDimensionsDataTable)(base.Tables["RetainerDimensions"]));
            if ((initTable == true)) {
                if ((this.tableRetainerDimensions != null)) {
                    this.tableRetainerDimensions.InitVars();
                }
            }
            this.tableScrewDimensions = ((ScrewDimensionsDataTable)(base.Tables["ScrewDimensions"]));
            if ((initTable == true)) {
                if ((this.tableScrewDimensions != null)) {
                    this.tableScrewDimensions.InitVars();
                }
            }
            this.tableShaftDimensions = ((ShaftDimensionsDataTable)(base.Tables["ShaftDimensions"]));
            if ((initTable == true)) {
                if ((this.tableShaftDimensions != null)) {
                    this.tableShaftDimensions.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Butterfly_Valve_DimensionsDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Butterfly_Valve_DimensionsDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableArmDimensions = new ArmDimensionsDataTable();
            base.Tables.Add(this.tableArmDimensions);
            this.tableBodyDimensions = new BodyDimensionsDataTable();
            base.Tables.Add(this.tableBodyDimensions);
            this.tableNutDimensions = new NutDimensionsDataTable();
            base.Tables.Add(this.tableNutDimensions);
            this.tablePlateDimensions = new PlateDimensionsDataTable();
            base.Tables.Add(this.tablePlateDimensions);
            this.tableRetainerDimensions = new RetainerDimensionsDataTable();
            base.Tables.Add(this.tableRetainerDimensions);
            this.tableScrewDimensions = new ScrewDimensionsDataTable();
            base.Tables.Add(this.tableScrewDimensions);
            this.tableShaftDimensions = new ShaftDimensionsDataTable();
            base.Tables.Add(this.tableShaftDimensions);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeArmDimensions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBodyDimensions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeNutDimensions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePlateDimensions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRetainerDimensions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeScrewDimensions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeShaftDimensions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Butterfly_Valve_DimensionsDataSet ds = new Butterfly_Valve_DimensionsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ArmDimensionsRowChangeEventHandler(object sender, ArmDimensionsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BodyDimensionsRowChangeEventHandler(object sender, BodyDimensionsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void NutDimensionsRowChangeEventHandler(object sender, NutDimensionsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PlateDimensionsRowChangeEventHandler(object sender, PlateDimensionsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RetainerDimensionsRowChangeEventHandler(object sender, RetainerDimensionsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ScrewDimensionsRowChangeEventHandler(object sender, ScrewDimensionsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ShaftDimensionsRowChangeEventHandler(object sender, ShaftDimensionsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ArmDimensionsDataTable : global::System.Data.TypedTableBase<ArmDimensionsRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columndim_A;
            
            private global::System.Data.DataColumn columndim_B;
            
            private global::System.Data.DataColumn columndim_C;
            
            private global::System.Data.DataColumn columndim_D;
            
            private global::System.Data.DataColumn columndim_E;
            
            private global::System.Data.DataColumn columndim_F;
            
            private global::System.Data.DataColumn columndim_G;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArmDimensionsDataTable() {
                this.TableName = "ArmDimensions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ArmDimensionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ArmDimensionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_AColumn {
                get {
                    return this.columndim_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_BColumn {
                get {
                    return this.columndim_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_CColumn {
                get {
                    return this.columndim_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_DColumn {
                get {
                    return this.columndim_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_EColumn {
                get {
                    return this.columndim_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_FColumn {
                get {
                    return this.columndim_F;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_GColumn {
                get {
                    return this.columndim_G;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArmDimensionsRow this[int index] {
                get {
                    return ((ArmDimensionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ArmDimensionsRowChangeEventHandler ArmDimensionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ArmDimensionsRowChangeEventHandler ArmDimensionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ArmDimensionsRowChangeEventHandler ArmDimensionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ArmDimensionsRowChangeEventHandler ArmDimensionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddArmDimensionsRow(ArmDimensionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArmDimensionsRow AddArmDimensionsRow(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, string dim_F, string dim_G) {
                ArmDimensionsRow rowArmDimensionsRow = ((ArmDimensionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        dim_A,
                        dim_B,
                        dim_C,
                        dim_D,
                        dim_E,
                        dim_F,
                        dim_G};
                rowArmDimensionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowArmDimensionsRow);
                return rowArmDimensionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArmDimensionsRow FindById(int Id) {
                return ((ArmDimensionsRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ArmDimensionsDataTable cln = ((ArmDimensionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ArmDimensionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columndim_A = base.Columns["dim_A"];
                this.columndim_B = base.Columns["dim_B"];
                this.columndim_C = base.Columns["dim_C"];
                this.columndim_D = base.Columns["dim_D"];
                this.columndim_E = base.Columns["dim_E"];
                this.columndim_F = base.Columns["dim_F"];
                this.columndim_G = base.Columns["dim_G"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columndim_A = new global::System.Data.DataColumn("dim_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_A);
                this.columndim_B = new global::System.Data.DataColumn("dim_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_B);
                this.columndim_C = new global::System.Data.DataColumn("dim_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_C);
                this.columndim_D = new global::System.Data.DataColumn("dim_D", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_D);
                this.columndim_E = new global::System.Data.DataColumn("dim_E", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_E);
                this.columndim_F = new global::System.Data.DataColumn("dim_F", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_F);
                this.columndim_G = new global::System.Data.DataColumn("dim_G", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_G);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columndim_A.AllowDBNull = false;
                this.columndim_A.MaxLength = 10;
                this.columndim_B.AllowDBNull = false;
                this.columndim_B.MaxLength = 10;
                this.columndim_C.AllowDBNull = false;
                this.columndim_C.MaxLength = 10;
                this.columndim_D.AllowDBNull = false;
                this.columndim_D.MaxLength = 10;
                this.columndim_E.AllowDBNull = false;
                this.columndim_E.MaxLength = 10;
                this.columndim_F.AllowDBNull = false;
                this.columndim_F.MaxLength = 10;
                this.columndim_G.AllowDBNull = false;
                this.columndim_G.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArmDimensionsRow NewArmDimensionsRow() {
                return ((ArmDimensionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ArmDimensionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ArmDimensionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ArmDimensionsRowChanged != null)) {
                    this.ArmDimensionsRowChanged(this, new ArmDimensionsRowChangeEvent(((ArmDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ArmDimensionsRowChanging != null)) {
                    this.ArmDimensionsRowChanging(this, new ArmDimensionsRowChangeEvent(((ArmDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ArmDimensionsRowDeleted != null)) {
                    this.ArmDimensionsRowDeleted(this, new ArmDimensionsRowChangeEvent(((ArmDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ArmDimensionsRowDeleting != null)) {
                    this.ArmDimensionsRowDeleting(this, new ArmDimensionsRowChangeEvent(((ArmDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveArmDimensionsRow(ArmDimensionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Butterfly_Valve_DimensionsDataSet ds = new Butterfly_Valve_DimensionsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ArmDimensionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BodyDimensionsDataTable : global::System.Data.TypedTableBase<BodyDimensionsRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columndim_A;
            
            private global::System.Data.DataColumn columndim_B;
            
            private global::System.Data.DataColumn columndim_C;
            
            private global::System.Data.DataColumn columndim_D;
            
            private global::System.Data.DataColumn columndim_E;
            
            private global::System.Data.DataColumn columndim_F;
            
            private global::System.Data.DataColumn columndim_G;
            
            private global::System.Data.DataColumn columndim_H;
            
            private global::System.Data.DataColumn columndim_I;
            
            private global::System.Data.DataColumn columndim_J;
            
            private global::System.Data.DataColumn columndim_K;
            
            private global::System.Data.DataColumn columndim_L;
            
            private global::System.Data.DataColumn columndim_M;
            
            private global::System.Data.DataColumn columndim_N;
            
            private global::System.Data.DataColumn columndim_O;
            
            private global::System.Data.DataColumn columndim_P;
            
            private global::System.Data.DataColumn columndim_Q;
            
            private global::System.Data.DataColumn columndim_R;
            
            private global::System.Data.DataColumn columndim_S;
            
            private global::System.Data.DataColumn columndim_T;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BodyDimensionsDataTable() {
                this.TableName = "BodyDimensions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BodyDimensionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BodyDimensionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_AColumn {
                get {
                    return this.columndim_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_BColumn {
                get {
                    return this.columndim_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_CColumn {
                get {
                    return this.columndim_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_DColumn {
                get {
                    return this.columndim_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_EColumn {
                get {
                    return this.columndim_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_FColumn {
                get {
                    return this.columndim_F;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_GColumn {
                get {
                    return this.columndim_G;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_HColumn {
                get {
                    return this.columndim_H;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_IColumn {
                get {
                    return this.columndim_I;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_JColumn {
                get {
                    return this.columndim_J;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_KColumn {
                get {
                    return this.columndim_K;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_LColumn {
                get {
                    return this.columndim_L;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_MColumn {
                get {
                    return this.columndim_M;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_NColumn {
                get {
                    return this.columndim_N;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_OColumn {
                get {
                    return this.columndim_O;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_PColumn {
                get {
                    return this.columndim_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_QColumn {
                get {
                    return this.columndim_Q;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_RColumn {
                get {
                    return this.columndim_R;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_SColumn {
                get {
                    return this.columndim_S;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_TColumn {
                get {
                    return this.columndim_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BodyDimensionsRow this[int index] {
                get {
                    return ((BodyDimensionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BodyDimensionsRowChangeEventHandler BodyDimensionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BodyDimensionsRowChangeEventHandler BodyDimensionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BodyDimensionsRowChangeEventHandler BodyDimensionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BodyDimensionsRowChangeEventHandler BodyDimensionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBodyDimensionsRow(BodyDimensionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BodyDimensionsRow AddBodyDimensionsRow(
                        int Id, 
                        string dim_A, 
                        string dim_B, 
                        string dim_C, 
                        string dim_D, 
                        string dim_E, 
                        string dim_F, 
                        string dim_G, 
                        string dim_H, 
                        string dim_I, 
                        string dim_J, 
                        string dim_K, 
                        string dim_L, 
                        string dim_M, 
                        string dim_N, 
                        string dim_O, 
                        string dim_P, 
                        string dim_Q, 
                        string dim_R, 
                        string dim_S, 
                        string dim_T) {
                BodyDimensionsRow rowBodyDimensionsRow = ((BodyDimensionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        dim_A,
                        dim_B,
                        dim_C,
                        dim_D,
                        dim_E,
                        dim_F,
                        dim_G,
                        dim_H,
                        dim_I,
                        dim_J,
                        dim_K,
                        dim_L,
                        dim_M,
                        dim_N,
                        dim_O,
                        dim_P,
                        dim_Q,
                        dim_R,
                        dim_S,
                        dim_T};
                rowBodyDimensionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBodyDimensionsRow);
                return rowBodyDimensionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BodyDimensionsRow FindById(int Id) {
                return ((BodyDimensionsRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BodyDimensionsDataTable cln = ((BodyDimensionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BodyDimensionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columndim_A = base.Columns["dim_A"];
                this.columndim_B = base.Columns["dim_B"];
                this.columndim_C = base.Columns["dim_C"];
                this.columndim_D = base.Columns["dim_D"];
                this.columndim_E = base.Columns["dim_E"];
                this.columndim_F = base.Columns["dim_F"];
                this.columndim_G = base.Columns["dim_G"];
                this.columndim_H = base.Columns["dim_H"];
                this.columndim_I = base.Columns["dim_I"];
                this.columndim_J = base.Columns["dim_J"];
                this.columndim_K = base.Columns["dim_K"];
                this.columndim_L = base.Columns["dim_L"];
                this.columndim_M = base.Columns["dim_M"];
                this.columndim_N = base.Columns["dim_N"];
                this.columndim_O = base.Columns["dim_O"];
                this.columndim_P = base.Columns["dim_P"];
                this.columndim_Q = base.Columns["dim_Q"];
                this.columndim_R = base.Columns["dim_R"];
                this.columndim_S = base.Columns["dim_S"];
                this.columndim_T = base.Columns["dim_T"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columndim_A = new global::System.Data.DataColumn("dim_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_A);
                this.columndim_B = new global::System.Data.DataColumn("dim_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_B);
                this.columndim_C = new global::System.Data.DataColumn("dim_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_C);
                this.columndim_D = new global::System.Data.DataColumn("dim_D", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_D);
                this.columndim_E = new global::System.Data.DataColumn("dim_E", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_E);
                this.columndim_F = new global::System.Data.DataColumn("dim_F", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_F);
                this.columndim_G = new global::System.Data.DataColumn("dim_G", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_G);
                this.columndim_H = new global::System.Data.DataColumn("dim_H", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_H);
                this.columndim_I = new global::System.Data.DataColumn("dim_I", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_I);
                this.columndim_J = new global::System.Data.DataColumn("dim_J", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_J);
                this.columndim_K = new global::System.Data.DataColumn("dim_K", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_K);
                this.columndim_L = new global::System.Data.DataColumn("dim_L", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_L);
                this.columndim_M = new global::System.Data.DataColumn("dim_M", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_M);
                this.columndim_N = new global::System.Data.DataColumn("dim_N", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_N);
                this.columndim_O = new global::System.Data.DataColumn("dim_O", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_O);
                this.columndim_P = new global::System.Data.DataColumn("dim_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_P);
                this.columndim_Q = new global::System.Data.DataColumn("dim_Q", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_Q);
                this.columndim_R = new global::System.Data.DataColumn("dim_R", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_R);
                this.columndim_S = new global::System.Data.DataColumn("dim_S", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_S);
                this.columndim_T = new global::System.Data.DataColumn("dim_T", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_T);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columndim_A.AllowDBNull = false;
                this.columndim_A.MaxLength = 10;
                this.columndim_B.AllowDBNull = false;
                this.columndim_B.MaxLength = 10;
                this.columndim_C.AllowDBNull = false;
                this.columndim_C.MaxLength = 10;
                this.columndim_D.AllowDBNull = false;
                this.columndim_D.MaxLength = 10;
                this.columndim_E.AllowDBNull = false;
                this.columndim_E.MaxLength = 10;
                this.columndim_F.AllowDBNull = false;
                this.columndim_F.MaxLength = 10;
                this.columndim_G.AllowDBNull = false;
                this.columndim_G.MaxLength = 10;
                this.columndim_H.AllowDBNull = false;
                this.columndim_H.MaxLength = 10;
                this.columndim_I.AllowDBNull = false;
                this.columndim_I.MaxLength = 10;
                this.columndim_J.AllowDBNull = false;
                this.columndim_J.MaxLength = 10;
                this.columndim_K.AllowDBNull = false;
                this.columndim_K.MaxLength = 10;
                this.columndim_L.AllowDBNull = false;
                this.columndim_L.MaxLength = 10;
                this.columndim_M.AllowDBNull = false;
                this.columndim_M.MaxLength = 10;
                this.columndim_N.AllowDBNull = false;
                this.columndim_N.MaxLength = 10;
                this.columndim_O.AllowDBNull = false;
                this.columndim_O.MaxLength = 10;
                this.columndim_P.AllowDBNull = false;
                this.columndim_P.MaxLength = 10;
                this.columndim_Q.AllowDBNull = false;
                this.columndim_Q.MaxLength = 10;
                this.columndim_R.AllowDBNull = false;
                this.columndim_R.MaxLength = 10;
                this.columndim_S.AllowDBNull = false;
                this.columndim_S.MaxLength = 10;
                this.columndim_T.AllowDBNull = false;
                this.columndim_T.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BodyDimensionsRow NewBodyDimensionsRow() {
                return ((BodyDimensionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BodyDimensionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BodyDimensionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BodyDimensionsRowChanged != null)) {
                    this.BodyDimensionsRowChanged(this, new BodyDimensionsRowChangeEvent(((BodyDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BodyDimensionsRowChanging != null)) {
                    this.BodyDimensionsRowChanging(this, new BodyDimensionsRowChangeEvent(((BodyDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BodyDimensionsRowDeleted != null)) {
                    this.BodyDimensionsRowDeleted(this, new BodyDimensionsRowChangeEvent(((BodyDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BodyDimensionsRowDeleting != null)) {
                    this.BodyDimensionsRowDeleting(this, new BodyDimensionsRowChangeEvent(((BodyDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBodyDimensionsRow(BodyDimensionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Butterfly_Valve_DimensionsDataSet ds = new Butterfly_Valve_DimensionsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BodyDimensionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NutDimensionsDataTable : global::System.Data.TypedTableBase<NutDimensionsRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columndim_A;
            
            private global::System.Data.DataColumn columndim_B;
            
            private global::System.Data.DataColumn columndim_C;
            
            private global::System.Data.DataColumn columndim_D;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NutDimensionsDataTable() {
                this.TableName = "NutDimensions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NutDimensionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected NutDimensionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_AColumn {
                get {
                    return this.columndim_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_BColumn {
                get {
                    return this.columndim_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_CColumn {
                get {
                    return this.columndim_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_DColumn {
                get {
                    return this.columndim_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NutDimensionsRow this[int index] {
                get {
                    return ((NutDimensionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NutDimensionsRowChangeEventHandler NutDimensionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NutDimensionsRowChangeEventHandler NutDimensionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NutDimensionsRowChangeEventHandler NutDimensionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event NutDimensionsRowChangeEventHandler NutDimensionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddNutDimensionsRow(NutDimensionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NutDimensionsRow AddNutDimensionsRow(int Id, string dim_A, string dim_B, string dim_C, string dim_D) {
                NutDimensionsRow rowNutDimensionsRow = ((NutDimensionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        dim_A,
                        dim_B,
                        dim_C,
                        dim_D};
                rowNutDimensionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNutDimensionsRow);
                return rowNutDimensionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NutDimensionsRow FindById(int Id) {
                return ((NutDimensionsRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                NutDimensionsDataTable cln = ((NutDimensionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NutDimensionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columndim_A = base.Columns["dim_A"];
                this.columndim_B = base.Columns["dim_B"];
                this.columndim_C = base.Columns["dim_C"];
                this.columndim_D = base.Columns["dim_D"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columndim_A = new global::System.Data.DataColumn("dim_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_A);
                this.columndim_B = new global::System.Data.DataColumn("dim_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_B);
                this.columndim_C = new global::System.Data.DataColumn("dim_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_C);
                this.columndim_D = new global::System.Data.DataColumn("dim_D", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_D);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columndim_A.AllowDBNull = false;
                this.columndim_A.MaxLength = 10;
                this.columndim_B.AllowDBNull = false;
                this.columndim_B.MaxLength = 10;
                this.columndim_C.AllowDBNull = false;
                this.columndim_C.MaxLength = 10;
                this.columndim_D.AllowDBNull = false;
                this.columndim_D.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NutDimensionsRow NewNutDimensionsRow() {
                return ((NutDimensionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NutDimensionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(NutDimensionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NutDimensionsRowChanged != null)) {
                    this.NutDimensionsRowChanged(this, new NutDimensionsRowChangeEvent(((NutDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NutDimensionsRowChanging != null)) {
                    this.NutDimensionsRowChanging(this, new NutDimensionsRowChangeEvent(((NutDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NutDimensionsRowDeleted != null)) {
                    this.NutDimensionsRowDeleted(this, new NutDimensionsRowChangeEvent(((NutDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NutDimensionsRowDeleting != null)) {
                    this.NutDimensionsRowDeleting(this, new NutDimensionsRowChangeEvent(((NutDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveNutDimensionsRow(NutDimensionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Butterfly_Valve_DimensionsDataSet ds = new Butterfly_Valve_DimensionsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NutDimensionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PlateDimensionsDataTable : global::System.Data.TypedTableBase<PlateDimensionsRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columndim_A;
            
            private global::System.Data.DataColumn columndim_B;
            
            private global::System.Data.DataColumn columndim_C;
            
            private global::System.Data.DataColumn columndim_D;
            
            private global::System.Data.DataColumn columndim_E;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PlateDimensionsDataTable() {
                this.TableName = "PlateDimensions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PlateDimensionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PlateDimensionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_AColumn {
                get {
                    return this.columndim_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_BColumn {
                get {
                    return this.columndim_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_CColumn {
                get {
                    return this.columndim_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_DColumn {
                get {
                    return this.columndim_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_EColumn {
                get {
                    return this.columndim_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PlateDimensionsRow this[int index] {
                get {
                    return ((PlateDimensionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PlateDimensionsRowChangeEventHandler PlateDimensionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PlateDimensionsRowChangeEventHandler PlateDimensionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PlateDimensionsRowChangeEventHandler PlateDimensionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PlateDimensionsRowChangeEventHandler PlateDimensionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPlateDimensionsRow(PlateDimensionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PlateDimensionsRow AddPlateDimensionsRow(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E) {
                PlateDimensionsRow rowPlateDimensionsRow = ((PlateDimensionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        dim_A,
                        dim_B,
                        dim_C,
                        dim_D,
                        dim_E};
                rowPlateDimensionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPlateDimensionsRow);
                return rowPlateDimensionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PlateDimensionsRow FindById(int Id) {
                return ((PlateDimensionsRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PlateDimensionsDataTable cln = ((PlateDimensionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PlateDimensionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columndim_A = base.Columns["dim_A"];
                this.columndim_B = base.Columns["dim_B"];
                this.columndim_C = base.Columns["dim_C"];
                this.columndim_D = base.Columns["dim_D"];
                this.columndim_E = base.Columns["dim_E"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columndim_A = new global::System.Data.DataColumn("dim_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_A);
                this.columndim_B = new global::System.Data.DataColumn("dim_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_B);
                this.columndim_C = new global::System.Data.DataColumn("dim_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_C);
                this.columndim_D = new global::System.Data.DataColumn("dim_D", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_D);
                this.columndim_E = new global::System.Data.DataColumn("dim_E", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_E);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columndim_A.AllowDBNull = false;
                this.columndim_A.MaxLength = 10;
                this.columndim_B.AllowDBNull = false;
                this.columndim_B.MaxLength = 10;
                this.columndim_C.AllowDBNull = false;
                this.columndim_C.MaxLength = 10;
                this.columndim_D.AllowDBNull = false;
                this.columndim_D.MaxLength = 10;
                this.columndim_E.AllowDBNull = false;
                this.columndim_E.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PlateDimensionsRow NewPlateDimensionsRow() {
                return ((PlateDimensionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PlateDimensionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PlateDimensionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PlateDimensionsRowChanged != null)) {
                    this.PlateDimensionsRowChanged(this, new PlateDimensionsRowChangeEvent(((PlateDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PlateDimensionsRowChanging != null)) {
                    this.PlateDimensionsRowChanging(this, new PlateDimensionsRowChangeEvent(((PlateDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PlateDimensionsRowDeleted != null)) {
                    this.PlateDimensionsRowDeleted(this, new PlateDimensionsRowChangeEvent(((PlateDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PlateDimensionsRowDeleting != null)) {
                    this.PlateDimensionsRowDeleting(this, new PlateDimensionsRowChangeEvent(((PlateDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePlateDimensionsRow(PlateDimensionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Butterfly_Valve_DimensionsDataSet ds = new Butterfly_Valve_DimensionsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PlateDimensionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RetainerDimensionsDataTable : global::System.Data.TypedTableBase<RetainerDimensionsRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columndim_A;
            
            private global::System.Data.DataColumn columndim_B;
            
            private global::System.Data.DataColumn columndim_C;
            
            private global::System.Data.DataColumn columndim_D;
            
            private global::System.Data.DataColumn columndim_E;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RetainerDimensionsDataTable() {
                this.TableName = "RetainerDimensions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RetainerDimensionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RetainerDimensionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_AColumn {
                get {
                    return this.columndim_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_BColumn {
                get {
                    return this.columndim_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_CColumn {
                get {
                    return this.columndim_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_DColumn {
                get {
                    return this.columndim_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_EColumn {
                get {
                    return this.columndim_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RetainerDimensionsRow this[int index] {
                get {
                    return ((RetainerDimensionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RetainerDimensionsRowChangeEventHandler RetainerDimensionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RetainerDimensionsRowChangeEventHandler RetainerDimensionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RetainerDimensionsRowChangeEventHandler RetainerDimensionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RetainerDimensionsRowChangeEventHandler RetainerDimensionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRetainerDimensionsRow(RetainerDimensionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RetainerDimensionsRow AddRetainerDimensionsRow(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E) {
                RetainerDimensionsRow rowRetainerDimensionsRow = ((RetainerDimensionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        dim_A,
                        dim_B,
                        dim_C,
                        dim_D,
                        dim_E};
                rowRetainerDimensionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRetainerDimensionsRow);
                return rowRetainerDimensionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RetainerDimensionsRow FindById(int Id) {
                return ((RetainerDimensionsRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RetainerDimensionsDataTable cln = ((RetainerDimensionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RetainerDimensionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columndim_A = base.Columns["dim_A"];
                this.columndim_B = base.Columns["dim_B"];
                this.columndim_C = base.Columns["dim_C"];
                this.columndim_D = base.Columns["dim_D"];
                this.columndim_E = base.Columns["dim_E"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columndim_A = new global::System.Data.DataColumn("dim_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_A);
                this.columndim_B = new global::System.Data.DataColumn("dim_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_B);
                this.columndim_C = new global::System.Data.DataColumn("dim_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_C);
                this.columndim_D = new global::System.Data.DataColumn("dim_D", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_D);
                this.columndim_E = new global::System.Data.DataColumn("dim_E", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_E);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columndim_A.AllowDBNull = false;
                this.columndim_A.MaxLength = 10;
                this.columndim_B.AllowDBNull = false;
                this.columndim_B.MaxLength = 10;
                this.columndim_C.AllowDBNull = false;
                this.columndim_C.MaxLength = 10;
                this.columndim_D.AllowDBNull = false;
                this.columndim_D.MaxLength = 10;
                this.columndim_E.AllowDBNull = false;
                this.columndim_E.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RetainerDimensionsRow NewRetainerDimensionsRow() {
                return ((RetainerDimensionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RetainerDimensionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RetainerDimensionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RetainerDimensionsRowChanged != null)) {
                    this.RetainerDimensionsRowChanged(this, new RetainerDimensionsRowChangeEvent(((RetainerDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RetainerDimensionsRowChanging != null)) {
                    this.RetainerDimensionsRowChanging(this, new RetainerDimensionsRowChangeEvent(((RetainerDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RetainerDimensionsRowDeleted != null)) {
                    this.RetainerDimensionsRowDeleted(this, new RetainerDimensionsRowChangeEvent(((RetainerDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RetainerDimensionsRowDeleting != null)) {
                    this.RetainerDimensionsRowDeleting(this, new RetainerDimensionsRowChangeEvent(((RetainerDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRetainerDimensionsRow(RetainerDimensionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Butterfly_Valve_DimensionsDataSet ds = new Butterfly_Valve_DimensionsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RetainerDimensionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ScrewDimensionsDataTable : global::System.Data.TypedTableBase<ScrewDimensionsRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columndim_A;
            
            private global::System.Data.DataColumn columndim_B;
            
            private global::System.Data.DataColumn columndim_C;
            
            private global::System.Data.DataColumn columndim_D;
            
            private global::System.Data.DataColumn columndim_E;
            
            private global::System.Data.DataColumn columndim_F;
            
            private global::System.Data.DataColumn columndim_G;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScrewDimensionsDataTable() {
                this.TableName = "ScrewDimensions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ScrewDimensionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ScrewDimensionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_AColumn {
                get {
                    return this.columndim_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_BColumn {
                get {
                    return this.columndim_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_CColumn {
                get {
                    return this.columndim_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_DColumn {
                get {
                    return this.columndim_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_EColumn {
                get {
                    return this.columndim_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_FColumn {
                get {
                    return this.columndim_F;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_GColumn {
                get {
                    return this.columndim_G;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScrewDimensionsRow this[int index] {
                get {
                    return ((ScrewDimensionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScrewDimensionsRowChangeEventHandler ScrewDimensionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScrewDimensionsRowChangeEventHandler ScrewDimensionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScrewDimensionsRowChangeEventHandler ScrewDimensionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ScrewDimensionsRowChangeEventHandler ScrewDimensionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddScrewDimensionsRow(ScrewDimensionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScrewDimensionsRow AddScrewDimensionsRow(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, string dim_F, string dim_G) {
                ScrewDimensionsRow rowScrewDimensionsRow = ((ScrewDimensionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        dim_A,
                        dim_B,
                        dim_C,
                        dim_D,
                        dim_E,
                        dim_F,
                        dim_G};
                rowScrewDimensionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowScrewDimensionsRow);
                return rowScrewDimensionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScrewDimensionsRow FindById(int Id) {
                return ((ScrewDimensionsRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ScrewDimensionsDataTable cln = ((ScrewDimensionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ScrewDimensionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columndim_A = base.Columns["dim_A"];
                this.columndim_B = base.Columns["dim_B"];
                this.columndim_C = base.Columns["dim_C"];
                this.columndim_D = base.Columns["dim_D"];
                this.columndim_E = base.Columns["dim_E"];
                this.columndim_F = base.Columns["dim_F"];
                this.columndim_G = base.Columns["dim_G"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columndim_A = new global::System.Data.DataColumn("dim_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_A);
                this.columndim_B = new global::System.Data.DataColumn("dim_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_B);
                this.columndim_C = new global::System.Data.DataColumn("dim_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_C);
                this.columndim_D = new global::System.Data.DataColumn("dim_D", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_D);
                this.columndim_E = new global::System.Data.DataColumn("dim_E", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_E);
                this.columndim_F = new global::System.Data.DataColumn("dim_F", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_F);
                this.columndim_G = new global::System.Data.DataColumn("dim_G", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_G);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columndim_A.AllowDBNull = false;
                this.columndim_A.MaxLength = 10;
                this.columndim_B.AllowDBNull = false;
                this.columndim_B.MaxLength = 10;
                this.columndim_C.AllowDBNull = false;
                this.columndim_C.MaxLength = 10;
                this.columndim_D.AllowDBNull = false;
                this.columndim_D.MaxLength = 10;
                this.columndim_E.AllowDBNull = false;
                this.columndim_E.MaxLength = 10;
                this.columndim_F.AllowDBNull = false;
                this.columndim_F.MaxLength = 10;
                this.columndim_G.AllowDBNull = false;
                this.columndim_G.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScrewDimensionsRow NewScrewDimensionsRow() {
                return ((ScrewDimensionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ScrewDimensionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ScrewDimensionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ScrewDimensionsRowChanged != null)) {
                    this.ScrewDimensionsRowChanged(this, new ScrewDimensionsRowChangeEvent(((ScrewDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ScrewDimensionsRowChanging != null)) {
                    this.ScrewDimensionsRowChanging(this, new ScrewDimensionsRowChangeEvent(((ScrewDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ScrewDimensionsRowDeleted != null)) {
                    this.ScrewDimensionsRowDeleted(this, new ScrewDimensionsRowChangeEvent(((ScrewDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ScrewDimensionsRowDeleting != null)) {
                    this.ScrewDimensionsRowDeleting(this, new ScrewDimensionsRowChangeEvent(((ScrewDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveScrewDimensionsRow(ScrewDimensionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Butterfly_Valve_DimensionsDataSet ds = new Butterfly_Valve_DimensionsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ScrewDimensionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShaftDimensionsDataTable : global::System.Data.TypedTableBase<ShaftDimensionsRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columndim_A;
            
            private global::System.Data.DataColumn columndim_B;
            
            private global::System.Data.DataColumn columndim_C;
            
            private global::System.Data.DataColumn columndim_D;
            
            private global::System.Data.DataColumn columndim_E;
            
            private global::System.Data.DataColumn columndim_F;
            
            private global::System.Data.DataColumn columndim_G;
            
            private global::System.Data.DataColumn columndim_H;
            
            private global::System.Data.DataColumn columndim_I;
            
            private global::System.Data.DataColumn columndim_J;
            
            private global::System.Data.DataColumn columndim_K;
            
            private global::System.Data.DataColumn columndim_L;
            
            private global::System.Data.DataColumn columndim_M;
            
            private global::System.Data.DataColumn columndim_N;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShaftDimensionsDataTable() {
                this.TableName = "ShaftDimensions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShaftDimensionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ShaftDimensionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_AColumn {
                get {
                    return this.columndim_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_BColumn {
                get {
                    return this.columndim_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_CColumn {
                get {
                    return this.columndim_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_DColumn {
                get {
                    return this.columndim_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_EColumn {
                get {
                    return this.columndim_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_FColumn {
                get {
                    return this.columndim_F;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_GColumn {
                get {
                    return this.columndim_G;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_HColumn {
                get {
                    return this.columndim_H;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_IColumn {
                get {
                    return this.columndim_I;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_JColumn {
                get {
                    return this.columndim_J;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_KColumn {
                get {
                    return this.columndim_K;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_LColumn {
                get {
                    return this.columndim_L;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_MColumn {
                get {
                    return this.columndim_M;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dim_NColumn {
                get {
                    return this.columndim_N;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShaftDimensionsRow this[int index] {
                get {
                    return ((ShaftDimensionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShaftDimensionsRowChangeEventHandler ShaftDimensionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShaftDimensionsRowChangeEventHandler ShaftDimensionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShaftDimensionsRowChangeEventHandler ShaftDimensionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShaftDimensionsRowChangeEventHandler ShaftDimensionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddShaftDimensionsRow(ShaftDimensionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShaftDimensionsRow AddShaftDimensionsRow(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, string dim_F, string dim_G, string dim_H, string dim_I, string dim_J, string dim_K, string dim_L, string dim_M, string dim_N) {
                ShaftDimensionsRow rowShaftDimensionsRow = ((ShaftDimensionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        dim_A,
                        dim_B,
                        dim_C,
                        dim_D,
                        dim_E,
                        dim_F,
                        dim_G,
                        dim_H,
                        dim_I,
                        dim_J,
                        dim_K,
                        dim_L,
                        dim_M,
                        dim_N};
                rowShaftDimensionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShaftDimensionsRow);
                return rowShaftDimensionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShaftDimensionsRow FindById(int Id) {
                return ((ShaftDimensionsRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShaftDimensionsDataTable cln = ((ShaftDimensionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShaftDimensionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columndim_A = base.Columns["dim_A"];
                this.columndim_B = base.Columns["dim_B"];
                this.columndim_C = base.Columns["dim_C"];
                this.columndim_D = base.Columns["dim_D"];
                this.columndim_E = base.Columns["dim_E"];
                this.columndim_F = base.Columns["dim_F"];
                this.columndim_G = base.Columns["dim_G"];
                this.columndim_H = base.Columns["dim_H"];
                this.columndim_I = base.Columns["dim_I"];
                this.columndim_J = base.Columns["dim_J"];
                this.columndim_K = base.Columns["dim_K"];
                this.columndim_L = base.Columns["dim_L"];
                this.columndim_M = base.Columns["dim_M"];
                this.columndim_N = base.Columns["dim_N"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columndim_A = new global::System.Data.DataColumn("dim_A", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_A);
                this.columndim_B = new global::System.Data.DataColumn("dim_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_B);
                this.columndim_C = new global::System.Data.DataColumn("dim_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_C);
                this.columndim_D = new global::System.Data.DataColumn("dim_D", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_D);
                this.columndim_E = new global::System.Data.DataColumn("dim_E", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_E);
                this.columndim_F = new global::System.Data.DataColumn("dim_F", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_F);
                this.columndim_G = new global::System.Data.DataColumn("dim_G", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_G);
                this.columndim_H = new global::System.Data.DataColumn("dim_H", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_H);
                this.columndim_I = new global::System.Data.DataColumn("dim_I", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_I);
                this.columndim_J = new global::System.Data.DataColumn("dim_J", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_J);
                this.columndim_K = new global::System.Data.DataColumn("dim_K", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_K);
                this.columndim_L = new global::System.Data.DataColumn("dim_L", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_L);
                this.columndim_M = new global::System.Data.DataColumn("dim_M", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_M);
                this.columndim_N = new global::System.Data.DataColumn("dim_N", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndim_N);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columndim_A.AllowDBNull = false;
                this.columndim_A.MaxLength = 10;
                this.columndim_B.AllowDBNull = false;
                this.columndim_B.MaxLength = 10;
                this.columndim_C.AllowDBNull = false;
                this.columndim_C.MaxLength = 10;
                this.columndim_D.AllowDBNull = false;
                this.columndim_D.MaxLength = 10;
                this.columndim_E.AllowDBNull = false;
                this.columndim_E.MaxLength = 10;
                this.columndim_F.AllowDBNull = false;
                this.columndim_F.MaxLength = 10;
                this.columndim_G.AllowDBNull = false;
                this.columndim_G.MaxLength = 10;
                this.columndim_H.AllowDBNull = false;
                this.columndim_H.MaxLength = 10;
                this.columndim_I.AllowDBNull = false;
                this.columndim_I.MaxLength = 10;
                this.columndim_J.AllowDBNull = false;
                this.columndim_J.MaxLength = 10;
                this.columndim_K.AllowDBNull = false;
                this.columndim_K.MaxLength = 10;
                this.columndim_L.AllowDBNull = false;
                this.columndim_L.MaxLength = 10;
                this.columndim_M.AllowDBNull = false;
                this.columndim_M.MaxLength = 10;
                this.columndim_N.AllowDBNull = false;
                this.columndim_N.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShaftDimensionsRow NewShaftDimensionsRow() {
                return ((ShaftDimensionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShaftDimensionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShaftDimensionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShaftDimensionsRowChanged != null)) {
                    this.ShaftDimensionsRowChanged(this, new ShaftDimensionsRowChangeEvent(((ShaftDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShaftDimensionsRowChanging != null)) {
                    this.ShaftDimensionsRowChanging(this, new ShaftDimensionsRowChangeEvent(((ShaftDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShaftDimensionsRowDeleted != null)) {
                    this.ShaftDimensionsRowDeleted(this, new ShaftDimensionsRowChangeEvent(((ShaftDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShaftDimensionsRowDeleting != null)) {
                    this.ShaftDimensionsRowDeleting(this, new ShaftDimensionsRowChangeEvent(((ShaftDimensionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveShaftDimensionsRow(ShaftDimensionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Butterfly_Valve_DimensionsDataSet ds = new Butterfly_Valve_DimensionsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShaftDimensionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ArmDimensionsRow : global::System.Data.DataRow {
            
            private ArmDimensionsDataTable tableArmDimensions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ArmDimensionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableArmDimensions = ((ArmDimensionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableArmDimensions.IdColumn]));
                }
                set {
                    this[this.tableArmDimensions.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_A {
                get {
                    return ((string)(this[this.tableArmDimensions.dim_AColumn]));
                }
                set {
                    this[this.tableArmDimensions.dim_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_B {
                get {
                    return ((string)(this[this.tableArmDimensions.dim_BColumn]));
                }
                set {
                    this[this.tableArmDimensions.dim_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_C {
                get {
                    return ((string)(this[this.tableArmDimensions.dim_CColumn]));
                }
                set {
                    this[this.tableArmDimensions.dim_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_D {
                get {
                    return ((string)(this[this.tableArmDimensions.dim_DColumn]));
                }
                set {
                    this[this.tableArmDimensions.dim_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_E {
                get {
                    return ((string)(this[this.tableArmDimensions.dim_EColumn]));
                }
                set {
                    this[this.tableArmDimensions.dim_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_F {
                get {
                    return ((string)(this[this.tableArmDimensions.dim_FColumn]));
                }
                set {
                    this[this.tableArmDimensions.dim_FColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_G {
                get {
                    return ((string)(this[this.tableArmDimensions.dim_GColumn]));
                }
                set {
                    this[this.tableArmDimensions.dim_GColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BodyDimensionsRow : global::System.Data.DataRow {
            
            private BodyDimensionsDataTable tableBodyDimensions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BodyDimensionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBodyDimensions = ((BodyDimensionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableBodyDimensions.IdColumn]));
                }
                set {
                    this[this.tableBodyDimensions.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_A {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_AColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_B {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_BColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_C {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_CColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_D {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_DColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_E {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_EColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_F {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_FColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_FColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_G {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_GColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_GColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_H {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_HColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_HColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_I {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_IColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_IColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_J {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_JColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_JColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_K {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_KColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_KColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_L {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_LColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_M {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_MColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_MColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_N {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_NColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_NColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_O {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_OColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_OColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_P {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_PColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_Q {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_QColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_QColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_R {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_RColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_RColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_S {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_SColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_SColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_T {
                get {
                    return ((string)(this[this.tableBodyDimensions.dim_TColumn]));
                }
                set {
                    this[this.tableBodyDimensions.dim_TColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class NutDimensionsRow : global::System.Data.DataRow {
            
            private NutDimensionsDataTable tableNutDimensions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal NutDimensionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNutDimensions = ((NutDimensionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableNutDimensions.IdColumn]));
                }
                set {
                    this[this.tableNutDimensions.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_A {
                get {
                    return ((string)(this[this.tableNutDimensions.dim_AColumn]));
                }
                set {
                    this[this.tableNutDimensions.dim_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_B {
                get {
                    return ((string)(this[this.tableNutDimensions.dim_BColumn]));
                }
                set {
                    this[this.tableNutDimensions.dim_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_C {
                get {
                    return ((string)(this[this.tableNutDimensions.dim_CColumn]));
                }
                set {
                    this[this.tableNutDimensions.dim_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_D {
                get {
                    return ((string)(this[this.tableNutDimensions.dim_DColumn]));
                }
                set {
                    this[this.tableNutDimensions.dim_DColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PlateDimensionsRow : global::System.Data.DataRow {
            
            private PlateDimensionsDataTable tablePlateDimensions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PlateDimensionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePlateDimensions = ((PlateDimensionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tablePlateDimensions.IdColumn]));
                }
                set {
                    this[this.tablePlateDimensions.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_A {
                get {
                    return ((string)(this[this.tablePlateDimensions.dim_AColumn]));
                }
                set {
                    this[this.tablePlateDimensions.dim_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_B {
                get {
                    return ((string)(this[this.tablePlateDimensions.dim_BColumn]));
                }
                set {
                    this[this.tablePlateDimensions.dim_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_C {
                get {
                    return ((string)(this[this.tablePlateDimensions.dim_CColumn]));
                }
                set {
                    this[this.tablePlateDimensions.dim_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_D {
                get {
                    return ((string)(this[this.tablePlateDimensions.dim_DColumn]));
                }
                set {
                    this[this.tablePlateDimensions.dim_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_E {
                get {
                    return ((string)(this[this.tablePlateDimensions.dim_EColumn]));
                }
                set {
                    this[this.tablePlateDimensions.dim_EColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RetainerDimensionsRow : global::System.Data.DataRow {
            
            private RetainerDimensionsDataTable tableRetainerDimensions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RetainerDimensionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRetainerDimensions = ((RetainerDimensionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableRetainerDimensions.IdColumn]));
                }
                set {
                    this[this.tableRetainerDimensions.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_A {
                get {
                    return ((string)(this[this.tableRetainerDimensions.dim_AColumn]));
                }
                set {
                    this[this.tableRetainerDimensions.dim_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_B {
                get {
                    return ((string)(this[this.tableRetainerDimensions.dim_BColumn]));
                }
                set {
                    this[this.tableRetainerDimensions.dim_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_C {
                get {
                    return ((string)(this[this.tableRetainerDimensions.dim_CColumn]));
                }
                set {
                    this[this.tableRetainerDimensions.dim_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_D {
                get {
                    return ((string)(this[this.tableRetainerDimensions.dim_DColumn]));
                }
                set {
                    this[this.tableRetainerDimensions.dim_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_E {
                get {
                    return ((string)(this[this.tableRetainerDimensions.dim_EColumn]));
                }
                set {
                    this[this.tableRetainerDimensions.dim_EColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ScrewDimensionsRow : global::System.Data.DataRow {
            
            private ScrewDimensionsDataTable tableScrewDimensions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ScrewDimensionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableScrewDimensions = ((ScrewDimensionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableScrewDimensions.IdColumn]));
                }
                set {
                    this[this.tableScrewDimensions.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_A {
                get {
                    return ((string)(this[this.tableScrewDimensions.dim_AColumn]));
                }
                set {
                    this[this.tableScrewDimensions.dim_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_B {
                get {
                    return ((string)(this[this.tableScrewDimensions.dim_BColumn]));
                }
                set {
                    this[this.tableScrewDimensions.dim_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_C {
                get {
                    return ((string)(this[this.tableScrewDimensions.dim_CColumn]));
                }
                set {
                    this[this.tableScrewDimensions.dim_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_D {
                get {
                    return ((string)(this[this.tableScrewDimensions.dim_DColumn]));
                }
                set {
                    this[this.tableScrewDimensions.dim_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_E {
                get {
                    return ((string)(this[this.tableScrewDimensions.dim_EColumn]));
                }
                set {
                    this[this.tableScrewDimensions.dim_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_F {
                get {
                    return ((string)(this[this.tableScrewDimensions.dim_FColumn]));
                }
                set {
                    this[this.tableScrewDimensions.dim_FColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_G {
                get {
                    return ((string)(this[this.tableScrewDimensions.dim_GColumn]));
                }
                set {
                    this[this.tableScrewDimensions.dim_GColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShaftDimensionsRow : global::System.Data.DataRow {
            
            private ShaftDimensionsDataTable tableShaftDimensions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShaftDimensionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShaftDimensions = ((ShaftDimensionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableShaftDimensions.IdColumn]));
                }
                set {
                    this[this.tableShaftDimensions.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_A {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_AColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_B {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_BColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_C {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_CColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_D {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_DColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_E {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_EColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_F {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_FColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_FColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_G {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_GColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_GColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_H {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_HColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_HColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_I {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_IColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_IColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_J {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_JColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_JColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_K {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_KColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_KColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_L {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_LColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_M {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_MColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_MColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dim_N {
                get {
                    return ((string)(this[this.tableShaftDimensions.dim_NColumn]));
                }
                set {
                    this[this.tableShaftDimensions.dim_NColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ArmDimensionsRowChangeEvent : global::System.EventArgs {
            
            private ArmDimensionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArmDimensionsRowChangeEvent(ArmDimensionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ArmDimensionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BodyDimensionsRowChangeEvent : global::System.EventArgs {
            
            private BodyDimensionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BodyDimensionsRowChangeEvent(BodyDimensionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BodyDimensionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class NutDimensionsRowChangeEvent : global::System.EventArgs {
            
            private NutDimensionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NutDimensionsRowChangeEvent(NutDimensionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public NutDimensionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PlateDimensionsRowChangeEvent : global::System.EventArgs {
            
            private PlateDimensionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PlateDimensionsRowChangeEvent(PlateDimensionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PlateDimensionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RetainerDimensionsRowChangeEvent : global::System.EventArgs {
            
            private RetainerDimensionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RetainerDimensionsRowChangeEvent(RetainerDimensionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RetainerDimensionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ScrewDimensionsRowChangeEvent : global::System.EventArgs {
            
            private ScrewDimensionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScrewDimensionsRowChangeEvent(ScrewDimensionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ScrewDimensionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ShaftDimensionsRowChangeEvent : global::System.EventArgs {
            
            private ShaftDimensionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShaftDimensionsRowChangeEvent(ShaftDimensionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShaftDimensionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ButterflyValveAPI.Butterfly_Valve_DimensionsDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ArmDimensionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ArmDimensionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ArmDimensions";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("dim_A", "dim_A");
            tableMapping.ColumnMappings.Add("dim_B", "dim_B");
            tableMapping.ColumnMappings.Add("dim_C", "dim_C");
            tableMapping.ColumnMappings.Add("dim_D", "dim_D");
            tableMapping.ColumnMappings.Add("dim_E", "dim_E");
            tableMapping.ColumnMappings.Add("dim_F", "dim_F");
            tableMapping.ColumnMappings.Add("dim_G", "dim_G");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ArmDimensions] WHERE (([Id] = @Original_Id) AND ([dim_A] = @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E) AND ([dim_F] = @Original_dim_F) AND ([dim_G] = @Original_dim_G))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ArmDimensions] ([Id], [dim_A], [dim_B], [dim_C], [dim_D], [dim_E], [dim_F], [dim_G]) VALUES (@Id, @dim_A, @dim_B, @dim_C, @dim_D, @dim_E, @dim_F, @dim_G);
SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G FROM ArmDimensions WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ArmDimensions] SET [Id] = @Id, [dim_A] = @dim_A, [dim_B] = @dim_B, [dim_C] = @dim_C, [dim_D] = @dim_D, [dim_E] = @dim_E, [dim_F] = @dim_F, [dim_G] = @dim_G WHERE (([Id] = @Original_Id) AND ([dim_A] = @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E) AND ([dim_F] = @Original_dim_F) AND ([dim_G] = @Original_dim_G));
SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G FROM ArmDimensions WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ButterflyValveAPI.Properties.Settings.Default.Butterfly_Valve_DimensionsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G FROM dbo.ArmDimensions" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Butterfly_Valve_DimensionsDataSet.ArmDimensionsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Butterfly_Valve_DimensionsDataSet.ArmDimensionsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Butterfly_Valve_DimensionsDataSet.ArmDimensionsDataTable dataTable = new Butterfly_Valve_DimensionsDataSet.ArmDimensionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet.ArmDimensionsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ArmDimensions");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D, string Original_dim_E, string Original_dim_F, string Original_dim_G) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_dim_E));
            }
            if ((Original_dim_F == null)) {
                throw new global::System.ArgumentNullException("Original_dim_F");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_dim_F));
            }
            if ((Original_dim_G == null)) {
                throw new global::System.ArgumentNullException("Original_dim_G");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_dim_G));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, string dim_F, string dim_G) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(dim_E));
            }
            if ((dim_F == null)) {
                throw new global::System.ArgumentNullException("dim_F");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(dim_F));
            }
            if ((dim_G == null)) {
                throw new global::System.ArgumentNullException("dim_G");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(dim_G));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Id, 
                    string dim_A, 
                    string dim_B, 
                    string dim_C, 
                    string dim_D, 
                    string dim_E, 
                    string dim_F, 
                    string dim_G, 
                    int Original_Id, 
                    string Original_dim_A, 
                    string Original_dim_B, 
                    string Original_dim_C, 
                    string Original_dim_D, 
                    string Original_dim_E, 
                    string Original_dim_F, 
                    string Original_dim_G) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(dim_E));
            }
            if ((dim_F == null)) {
                throw new global::System.ArgumentNullException("dim_F");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(dim_F));
            }
            if ((dim_G == null)) {
                throw new global::System.ArgumentNullException("dim_G");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(dim_G));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_dim_E));
            }
            if ((Original_dim_F == null)) {
                throw new global::System.ArgumentNullException("Original_dim_F");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_dim_F));
            }
            if ((Original_dim_G == null)) {
                throw new global::System.ArgumentNullException("Original_dim_G");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_dim_G));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, string dim_F, string dim_G, int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D, string Original_dim_E, string Original_dim_F, string Original_dim_G) {
            return this.Update(Original_Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G, Original_Id, Original_dim_A, Original_dim_B, Original_dim_C, Original_dim_D, Original_dim_E, Original_dim_F, Original_dim_G);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BodyDimensionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BodyDimensionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BodyDimensions";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("dim_A", "dim_A");
            tableMapping.ColumnMappings.Add("dim_B", "dim_B");
            tableMapping.ColumnMappings.Add("dim_C", "dim_C");
            tableMapping.ColumnMappings.Add("dim_D", "dim_D");
            tableMapping.ColumnMappings.Add("dim_E", "dim_E");
            tableMapping.ColumnMappings.Add("dim_F", "dim_F");
            tableMapping.ColumnMappings.Add("dim_G", "dim_G");
            tableMapping.ColumnMappings.Add("dim_H", "dim_H");
            tableMapping.ColumnMappings.Add("dim_I", "dim_I");
            tableMapping.ColumnMappings.Add("dim_J", "dim_J");
            tableMapping.ColumnMappings.Add("dim_K", "dim_K");
            tableMapping.ColumnMappings.Add("dim_L", "dim_L");
            tableMapping.ColumnMappings.Add("dim_M", "dim_M");
            tableMapping.ColumnMappings.Add("dim_N", "dim_N");
            tableMapping.ColumnMappings.Add("dim_O", "dim_O");
            tableMapping.ColumnMappings.Add("dim_P", "dim_P");
            tableMapping.ColumnMappings.Add("dim_Q", "dim_Q");
            tableMapping.ColumnMappings.Add("dim_R", "dim_R");
            tableMapping.ColumnMappings.Add("dim_S", "dim_S");
            tableMapping.ColumnMappings.Add("dim_T", "dim_T");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[BodyDimensions] WHERE (([Id] = @Original_Id) AND ([dim_A] = @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E) AND ([dim_F] = @Original_dim_F) AND ([dim_G] = @Original_dim_G) AND ([dim_H] = @Original_dim_H) AND ([dim_I] = @Original_dim_I) AND ([dim_J] = @Original_dim_J) AND ([dim_K] = @Original_dim_K) AND ([dim_L] = @Original_dim_L) AND ([dim_M] = @Original_dim_M) AND ([dim_N] = @Original_dim_N) AND ([dim_O] = @Original_dim_O) AND ([dim_P] = @Original_dim_P) AND ([dim_Q] = @Original_dim_Q) AND ([dim_R] = @Original_dim_R) AND ([dim_S] = @Original_dim_S) AND ([dim_T] = @Original_dim_T))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_H", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_H", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_I", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_I", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_J", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_J", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_K", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_K", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_L", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_L", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_M", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_M", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_N", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_N", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_O", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_O", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_Q", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_Q", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_R", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_R", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_S", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_S", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_T", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_T", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[BodyDimensions] ([Id], [dim_A], [dim_B], [dim_C], [dim_D], [dim_E], [dim_F], [dim_G], [dim_H], [dim_I], [dim_J], [dim_K], [dim_L], [dim_M], [dim_N], [dim_O], [dim_P], [dim_Q], [dim_R], [dim_S], [dim_T]) VALUES (@Id, @dim_A, @dim_B, @dim_C, @dim_D, @dim_E, @dim_F, @dim_G, @dim_H, @dim_I, @dim_J, @dim_K, @dim_L, @dim_M, @dim_N, @dim_O, @dim_P, @dim_Q, @dim_R, @dim_S, @dim_T);
SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G, dim_H, dim_I, dim_J, dim_K, dim_L, dim_M, dim_N, dim_O, dim_P, dim_Q, dim_R, dim_S, dim_T FROM BodyDimensions WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_H", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_H", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_I", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_I", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_J", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_J", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_K", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_K", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_L", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_L", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_M", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_M", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_N", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_N", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_O", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_O", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_Q", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_Q", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_R", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_R", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_S", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_S", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_T", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_T", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[BodyDimensions] SET [Id] = @Id, [dim_A] = @dim_A, [dim_B] = @dim_B, [dim_C] = @dim_C, [dim_D] = @dim_D, [dim_E] = @dim_E, [dim_F] = @dim_F, [dim_G] = @dim_G, [dim_H] = @dim_H, [dim_I] = @dim_I, [dim_J] = @dim_J, [dim_K] = @dim_K, [dim_L] = @dim_L, [dim_M] = @dim_M, [dim_N] = @dim_N, [dim_O] = @dim_O, [dim_P] = @dim_P, [dim_Q] = @dim_Q, [dim_R] = @dim_R, [dim_S] = @dim_S, [dim_T] = @dim_T WHERE (([Id] = @Original_Id) AND ([dim_A] = @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E) AND ([dim_F] = @Original_dim_F) AND ([dim_G] = @Original_dim_G) AND ([dim_H] = @Original_dim_H) AND ([dim_I] = @Original_dim_I) AND ([dim_J] = @Original_dim_J) AND ([dim_K] = @Original_dim_K) AND ([dim_L] = @Original_dim_L) AND ([dim_M] = @Original_dim_M) AND ([dim_N] = @Original_dim_N) AND ([dim_O] = @Original_dim_O) AND ([dim_P] = @Original_dim_P) AND ([dim_Q] = @Original_dim_Q) AND ([dim_R] = @Original_dim_R) AND ([dim_S] = @Original_dim_S) AND ([dim_T] = @Original_dim_T));
SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G, dim_H, dim_I, dim_J, dim_K, dim_L, dim_M, dim_N, dim_O, dim_P, dim_Q, dim_R, dim_S, dim_T FROM BodyDimensions WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_H", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_H", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_I", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_I", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_J", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_J", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_K", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_K", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_L", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_L", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_M", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_M", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_N", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_N", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_O", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_O", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_P", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_Q", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_Q", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_R", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_R", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_S", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_S", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_T", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_T", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_H", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_H", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_I", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_I", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_J", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_J", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_K", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_K", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_L", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_L", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_M", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_M", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_N", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_N", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_O", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_O", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_P", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_P", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_Q", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_Q", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_R", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_R", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_S", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_S", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_T", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_T", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ButterflyValveAPI.Properties.Settings.Default.Butterfly_Valve_DimensionsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G, dim_H, dim_I, dim_J, " +
                "dim_K, dim_L, dim_M, dim_N, dim_O, dim_P, dim_Q, dim_R, dim_S, dim_T FROM dbo.Bo" +
                "dyDimensions";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Butterfly_Valve_DimensionsDataSet.BodyDimensionsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Butterfly_Valve_DimensionsDataSet.BodyDimensionsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Butterfly_Valve_DimensionsDataSet.BodyDimensionsDataTable dataTable = new Butterfly_Valve_DimensionsDataSet.BodyDimensionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet.BodyDimensionsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BodyDimensions");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id, 
                    string Original_dim_A, 
                    string Original_dim_B, 
                    string Original_dim_C, 
                    string Original_dim_D, 
                    string Original_dim_E, 
                    string Original_dim_F, 
                    string Original_dim_G, 
                    string Original_dim_H, 
                    string Original_dim_I, 
                    string Original_dim_J, 
                    string Original_dim_K, 
                    string Original_dim_L, 
                    string Original_dim_M, 
                    string Original_dim_N, 
                    string Original_dim_O, 
                    string Original_dim_P, 
                    string Original_dim_Q, 
                    string Original_dim_R, 
                    string Original_dim_S, 
                    string Original_dim_T) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_dim_E));
            }
            if ((Original_dim_F == null)) {
                throw new global::System.ArgumentNullException("Original_dim_F");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_dim_F));
            }
            if ((Original_dim_G == null)) {
                throw new global::System.ArgumentNullException("Original_dim_G");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_dim_G));
            }
            if ((Original_dim_H == null)) {
                throw new global::System.ArgumentNullException("Original_dim_H");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_dim_H));
            }
            if ((Original_dim_I == null)) {
                throw new global::System.ArgumentNullException("Original_dim_I");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_dim_I));
            }
            if ((Original_dim_J == null)) {
                throw new global::System.ArgumentNullException("Original_dim_J");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_dim_J));
            }
            if ((Original_dim_K == null)) {
                throw new global::System.ArgumentNullException("Original_dim_K");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_dim_K));
            }
            if ((Original_dim_L == null)) {
                throw new global::System.ArgumentNullException("Original_dim_L");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_dim_L));
            }
            if ((Original_dim_M == null)) {
                throw new global::System.ArgumentNullException("Original_dim_M");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_dim_M));
            }
            if ((Original_dim_N == null)) {
                throw new global::System.ArgumentNullException("Original_dim_N");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_dim_N));
            }
            if ((Original_dim_O == null)) {
                throw new global::System.ArgumentNullException("Original_dim_O");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_dim_O));
            }
            if ((Original_dim_P == null)) {
                throw new global::System.ArgumentNullException("Original_dim_P");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_dim_P));
            }
            if ((Original_dim_Q == null)) {
                throw new global::System.ArgumentNullException("Original_dim_Q");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_dim_Q));
            }
            if ((Original_dim_R == null)) {
                throw new global::System.ArgumentNullException("Original_dim_R");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_dim_R));
            }
            if ((Original_dim_S == null)) {
                throw new global::System.ArgumentNullException("Original_dim_S");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_dim_S));
            }
            if ((Original_dim_T == null)) {
                throw new global::System.ArgumentNullException("Original_dim_T");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_dim_T));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int Id, 
                    string dim_A, 
                    string dim_B, 
                    string dim_C, 
                    string dim_D, 
                    string dim_E, 
                    string dim_F, 
                    string dim_G, 
                    string dim_H, 
                    string dim_I, 
                    string dim_J, 
                    string dim_K, 
                    string dim_L, 
                    string dim_M, 
                    string dim_N, 
                    string dim_O, 
                    string dim_P, 
                    string dim_Q, 
                    string dim_R, 
                    string dim_S, 
                    string dim_T) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(dim_E));
            }
            if ((dim_F == null)) {
                throw new global::System.ArgumentNullException("dim_F");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(dim_F));
            }
            if ((dim_G == null)) {
                throw new global::System.ArgumentNullException("dim_G");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(dim_G));
            }
            if ((dim_H == null)) {
                throw new global::System.ArgumentNullException("dim_H");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(dim_H));
            }
            if ((dim_I == null)) {
                throw new global::System.ArgumentNullException("dim_I");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(dim_I));
            }
            if ((dim_J == null)) {
                throw new global::System.ArgumentNullException("dim_J");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(dim_J));
            }
            if ((dim_K == null)) {
                throw new global::System.ArgumentNullException("dim_K");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(dim_K));
            }
            if ((dim_L == null)) {
                throw new global::System.ArgumentNullException("dim_L");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(dim_L));
            }
            if ((dim_M == null)) {
                throw new global::System.ArgumentNullException("dim_M");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(dim_M));
            }
            if ((dim_N == null)) {
                throw new global::System.ArgumentNullException("dim_N");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(dim_N));
            }
            if ((dim_O == null)) {
                throw new global::System.ArgumentNullException("dim_O");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(dim_O));
            }
            if ((dim_P == null)) {
                throw new global::System.ArgumentNullException("dim_P");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(dim_P));
            }
            if ((dim_Q == null)) {
                throw new global::System.ArgumentNullException("dim_Q");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(dim_Q));
            }
            if ((dim_R == null)) {
                throw new global::System.ArgumentNullException("dim_R");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(dim_R));
            }
            if ((dim_S == null)) {
                throw new global::System.ArgumentNullException("dim_S");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(dim_S));
            }
            if ((dim_T == null)) {
                throw new global::System.ArgumentNullException("dim_T");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(dim_T));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Id, 
                    string dim_A, 
                    string dim_B, 
                    string dim_C, 
                    string dim_D, 
                    string dim_E, 
                    string dim_F, 
                    string dim_G, 
                    string dim_H, 
                    string dim_I, 
                    string dim_J, 
                    string dim_K, 
                    string dim_L, 
                    string dim_M, 
                    string dim_N, 
                    string dim_O, 
                    string dim_P, 
                    string dim_Q, 
                    string dim_R, 
                    string dim_S, 
                    string dim_T, 
                    int Original_Id, 
                    string Original_dim_A, 
                    string Original_dim_B, 
                    string Original_dim_C, 
                    string Original_dim_D, 
                    string Original_dim_E, 
                    string Original_dim_F, 
                    string Original_dim_G, 
                    string Original_dim_H, 
                    string Original_dim_I, 
                    string Original_dim_J, 
                    string Original_dim_K, 
                    string Original_dim_L, 
                    string Original_dim_M, 
                    string Original_dim_N, 
                    string Original_dim_O, 
                    string Original_dim_P, 
                    string Original_dim_Q, 
                    string Original_dim_R, 
                    string Original_dim_S, 
                    string Original_dim_T) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(dim_E));
            }
            if ((dim_F == null)) {
                throw new global::System.ArgumentNullException("dim_F");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(dim_F));
            }
            if ((dim_G == null)) {
                throw new global::System.ArgumentNullException("dim_G");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(dim_G));
            }
            if ((dim_H == null)) {
                throw new global::System.ArgumentNullException("dim_H");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(dim_H));
            }
            if ((dim_I == null)) {
                throw new global::System.ArgumentNullException("dim_I");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(dim_I));
            }
            if ((dim_J == null)) {
                throw new global::System.ArgumentNullException("dim_J");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(dim_J));
            }
            if ((dim_K == null)) {
                throw new global::System.ArgumentNullException("dim_K");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(dim_K));
            }
            if ((dim_L == null)) {
                throw new global::System.ArgumentNullException("dim_L");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(dim_L));
            }
            if ((dim_M == null)) {
                throw new global::System.ArgumentNullException("dim_M");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(dim_M));
            }
            if ((dim_N == null)) {
                throw new global::System.ArgumentNullException("dim_N");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(dim_N));
            }
            if ((dim_O == null)) {
                throw new global::System.ArgumentNullException("dim_O");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(dim_O));
            }
            if ((dim_P == null)) {
                throw new global::System.ArgumentNullException("dim_P");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(dim_P));
            }
            if ((dim_Q == null)) {
                throw new global::System.ArgumentNullException("dim_Q");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(dim_Q));
            }
            if ((dim_R == null)) {
                throw new global::System.ArgumentNullException("dim_R");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(dim_R));
            }
            if ((dim_S == null)) {
                throw new global::System.ArgumentNullException("dim_S");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(dim_S));
            }
            if ((dim_T == null)) {
                throw new global::System.ArgumentNullException("dim_T");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(dim_T));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_dim_E));
            }
            if ((Original_dim_F == null)) {
                throw new global::System.ArgumentNullException("Original_dim_F");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_dim_F));
            }
            if ((Original_dim_G == null)) {
                throw new global::System.ArgumentNullException("Original_dim_G");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_dim_G));
            }
            if ((Original_dim_H == null)) {
                throw new global::System.ArgumentNullException("Original_dim_H");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_dim_H));
            }
            if ((Original_dim_I == null)) {
                throw new global::System.ArgumentNullException("Original_dim_I");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_dim_I));
            }
            if ((Original_dim_J == null)) {
                throw new global::System.ArgumentNullException("Original_dim_J");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_dim_J));
            }
            if ((Original_dim_K == null)) {
                throw new global::System.ArgumentNullException("Original_dim_K");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_dim_K));
            }
            if ((Original_dim_L == null)) {
                throw new global::System.ArgumentNullException("Original_dim_L");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_dim_L));
            }
            if ((Original_dim_M == null)) {
                throw new global::System.ArgumentNullException("Original_dim_M");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_dim_M));
            }
            if ((Original_dim_N == null)) {
                throw new global::System.ArgumentNullException("Original_dim_N");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_dim_N));
            }
            if ((Original_dim_O == null)) {
                throw new global::System.ArgumentNullException("Original_dim_O");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_dim_O));
            }
            if ((Original_dim_P == null)) {
                throw new global::System.ArgumentNullException("Original_dim_P");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_dim_P));
            }
            if ((Original_dim_Q == null)) {
                throw new global::System.ArgumentNullException("Original_dim_Q");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_dim_Q));
            }
            if ((Original_dim_R == null)) {
                throw new global::System.ArgumentNullException("Original_dim_R");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_dim_R));
            }
            if ((Original_dim_S == null)) {
                throw new global::System.ArgumentNullException("Original_dim_S");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_dim_S));
            }
            if ((Original_dim_T == null)) {
                throw new global::System.ArgumentNullException("Original_dim_T");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_dim_T));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string dim_A, 
                    string dim_B, 
                    string dim_C, 
                    string dim_D, 
                    string dim_E, 
                    string dim_F, 
                    string dim_G, 
                    string dim_H, 
                    string dim_I, 
                    string dim_J, 
                    string dim_K, 
                    string dim_L, 
                    string dim_M, 
                    string dim_N, 
                    string dim_O, 
                    string dim_P, 
                    string dim_Q, 
                    string dim_R, 
                    string dim_S, 
                    string dim_T, 
                    int Original_Id, 
                    string Original_dim_A, 
                    string Original_dim_B, 
                    string Original_dim_C, 
                    string Original_dim_D, 
                    string Original_dim_E, 
                    string Original_dim_F, 
                    string Original_dim_G, 
                    string Original_dim_H, 
                    string Original_dim_I, 
                    string Original_dim_J, 
                    string Original_dim_K, 
                    string Original_dim_L, 
                    string Original_dim_M, 
                    string Original_dim_N, 
                    string Original_dim_O, 
                    string Original_dim_P, 
                    string Original_dim_Q, 
                    string Original_dim_R, 
                    string Original_dim_S, 
                    string Original_dim_T) {
            return this.Update(Original_Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G, dim_H, dim_I, dim_J, dim_K, dim_L, dim_M, dim_N, dim_O, dim_P, dim_Q, dim_R, dim_S, dim_T, Original_Id, Original_dim_A, Original_dim_B, Original_dim_C, Original_dim_D, Original_dim_E, Original_dim_F, Original_dim_G, Original_dim_H, Original_dim_I, Original_dim_J, Original_dim_K, Original_dim_L, Original_dim_M, Original_dim_N, Original_dim_O, Original_dim_P, Original_dim_Q, Original_dim_R, Original_dim_S, Original_dim_T);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class NutDimensionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NutDimensionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "NutDimensions";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("dim_A", "dim_A");
            tableMapping.ColumnMappings.Add("dim_B", "dim_B");
            tableMapping.ColumnMappings.Add("dim_C", "dim_C");
            tableMapping.ColumnMappings.Add("dim_D", "dim_D");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[NutDimensions] WHERE (([Id] = @Original_Id) AND ([dim_A] = @Or" +
                "iginal_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AN" +
                "D ([dim_D] = @Original_dim_D))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[NutDimensions] ([Id], [dim_A], [dim_B], [dim_C], [dim_D]) VALU" +
                "ES (@Id, @dim_A, @dim_B, @dim_C, @dim_D);\r\nSELECT Id, dim_A, dim_B, dim_C, dim_D" +
                " FROM NutDimensions WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[NutDimensions] SET [Id] = @Id, [dim_A] = @dim_A, [dim_B] = @dim_B, [dim_C] = @dim_C, [dim_D] = @dim_D WHERE (([Id] = @Original_Id) AND ([dim_A] = @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AND ([dim_D] = @Original_dim_D));
SELECT Id, dim_A, dim_B, dim_C, dim_D FROM NutDimensions WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ButterflyValveAPI.Properties.Settings.Default.Butterfly_Valve_DimensionsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, dim_A, dim_B, dim_C, dim_D FROM dbo.NutDimensions";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Butterfly_Valve_DimensionsDataSet.NutDimensionsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Butterfly_Valve_DimensionsDataSet.NutDimensionsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Butterfly_Valve_DimensionsDataSet.NutDimensionsDataTable dataTable = new Butterfly_Valve_DimensionsDataSet.NutDimensionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet.NutDimensionsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "NutDimensions");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_dim_D));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string dim_A, string dim_B, string dim_C, string dim_D) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(dim_D));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id, string dim_A, string dim_B, string dim_C, string dim_D, int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(dim_D));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_dim_D));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string dim_A, string dim_B, string dim_C, string dim_D, int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D) {
            return this.Update(Original_Id, dim_A, dim_B, dim_C, dim_D, Original_Id, Original_dim_A, Original_dim_B, Original_dim_C, Original_dim_D);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PlateDimensionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PlateDimensionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PlateDimensions";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("dim_A", "dim_A");
            tableMapping.ColumnMappings.Add("dim_B", "dim_B");
            tableMapping.ColumnMappings.Add("dim_C", "dim_C");
            tableMapping.ColumnMappings.Add("dim_D", "dim_D");
            tableMapping.ColumnMappings.Add("dim_E", "dim_E");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PlateDimensions] WHERE (([Id] = @Original_Id) AND ([dim_A] = @" +
                "Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) " +
                "AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PlateDimensions] ([Id], [dim_A], [dim_B], [dim_C], [dim_D], [d" +
                "im_E]) VALUES (@Id, @dim_A, @dim_B, @dim_C, @dim_D, @dim_E);\r\nSELECT Id, dim_A, " +
                "dim_B, dim_C, dim_D, dim_E FROM PlateDimensions WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PlateDimensions] SET [Id] = @Id, [dim_A] = @dim_A, [dim_B] = @dim_B, [dim_C] = @dim_C, [dim_D] = @dim_D, [dim_E] = @dim_E WHERE (([Id] = @Original_Id) AND ([dim_A] = @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E));
SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E FROM PlateDimensions WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ButterflyValveAPI.Properties.Settings.Default.Butterfly_Valve_DimensionsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E FROM dbo.PlateDimensions";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Butterfly_Valve_DimensionsDataSet.PlateDimensionsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Butterfly_Valve_DimensionsDataSet.PlateDimensionsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Butterfly_Valve_DimensionsDataSet.PlateDimensionsDataTable dataTable = new Butterfly_Valve_DimensionsDataSet.PlateDimensionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet.PlateDimensionsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PlateDimensions");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D, string Original_dim_E) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_dim_E));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(dim_E));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D, string Original_dim_E) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(dim_E));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_dim_E));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D, string Original_dim_E) {
            return this.Update(Original_Id, dim_A, dim_B, dim_C, dim_D, dim_E, Original_Id, Original_dim_A, Original_dim_B, Original_dim_C, Original_dim_D, Original_dim_E);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RetainerDimensionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RetainerDimensionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RetainerDimensions";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("dim_A", "dim_A");
            tableMapping.ColumnMappings.Add("dim_B", "dim_B");
            tableMapping.ColumnMappings.Add("dim_C", "dim_C");
            tableMapping.ColumnMappings.Add("dim_D", "dim_D");
            tableMapping.ColumnMappings.Add("dim_E", "dim_E");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[RetainerDimensions] WHERE (([Id] = @Original_Id) AND ([dim_A] " +
                "= @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_" +
                "C) AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[RetainerDimensions] ([Id], [dim_A], [dim_B], [dim_C], [dim_D]," +
                " [dim_E]) VALUES (@Id, @dim_A, @dim_B, @dim_C, @dim_D, @dim_E);\r\nSELECT Id, dim_" +
                "A, dim_B, dim_C, dim_D, dim_E FROM RetainerDimensions WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[RetainerDimensions] SET [Id] = @Id, [dim_A] = @dim_A, [dim_B] = @dim_B, [dim_C] = @dim_C, [dim_D] = @dim_D, [dim_E] = @dim_E WHERE (([Id] = @Original_Id) AND ([dim_A] = @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E));
SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E FROM RetainerDimensions WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ButterflyValveAPI.Properties.Settings.Default.Butterfly_Valve_DimensionsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E FROM dbo.RetainerDimensions";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Butterfly_Valve_DimensionsDataSet.RetainerDimensionsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Butterfly_Valve_DimensionsDataSet.RetainerDimensionsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Butterfly_Valve_DimensionsDataSet.RetainerDimensionsDataTable dataTable = new Butterfly_Valve_DimensionsDataSet.RetainerDimensionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet.RetainerDimensionsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "RetainerDimensions");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D, string Original_dim_E) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_dim_E));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(dim_E));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D, string Original_dim_E) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(dim_E));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_dim_E));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D, string Original_dim_E) {
            return this.Update(Original_Id, dim_A, dim_B, dim_C, dim_D, dim_E, Original_Id, Original_dim_A, Original_dim_B, Original_dim_C, Original_dim_D, Original_dim_E);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ScrewDimensionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ScrewDimensionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ScrewDimensions";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("dim_A", "dim_A");
            tableMapping.ColumnMappings.Add("dim_B", "dim_B");
            tableMapping.ColumnMappings.Add("dim_C", "dim_C");
            tableMapping.ColumnMappings.Add("dim_D", "dim_D");
            tableMapping.ColumnMappings.Add("dim_E", "dim_E");
            tableMapping.ColumnMappings.Add("dim_F", "dim_F");
            tableMapping.ColumnMappings.Add("dim_G", "dim_G");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ScrewDimensions] WHERE (([Id] = @Original_Id) AND ([dim_A] = @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E) AND ([dim_F] = @Original_dim_F) AND ([dim_G] = @Original_dim_G))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ScrewDimensions] ([Id], [dim_A], [dim_B], [dim_C], [dim_D], [dim_E], [dim_F], [dim_G]) VALUES (@Id, @dim_A, @dim_B, @dim_C, @dim_D, @dim_E, @dim_F, @dim_G);
SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G FROM ScrewDimensions WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ScrewDimensions] SET [Id] = @Id, [dim_A] = @dim_A, [dim_B] = @dim_B, [dim_C] = @dim_C, [dim_D] = @dim_D, [dim_E] = @dim_E, [dim_F] = @dim_F, [dim_G] = @dim_G WHERE (([Id] = @Original_Id) AND ([dim_A] = @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E) AND ([dim_F] = @Original_dim_F) AND ([dim_G] = @Original_dim_G));
SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G FROM ScrewDimensions WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ButterflyValveAPI.Properties.Settings.Default.Butterfly_Valve_DimensionsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G FROM dbo.ScrewDimensio" +
                "ns";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Butterfly_Valve_DimensionsDataSet.ScrewDimensionsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Butterfly_Valve_DimensionsDataSet.ScrewDimensionsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Butterfly_Valve_DimensionsDataSet.ScrewDimensionsDataTable dataTable = new Butterfly_Valve_DimensionsDataSet.ScrewDimensionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet.ScrewDimensionsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ScrewDimensions");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D, string Original_dim_E, string Original_dim_F, string Original_dim_G) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_dim_E));
            }
            if ((Original_dim_F == null)) {
                throw new global::System.ArgumentNullException("Original_dim_F");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_dim_F));
            }
            if ((Original_dim_G == null)) {
                throw new global::System.ArgumentNullException("Original_dim_G");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_dim_G));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, string dim_F, string dim_G) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(dim_E));
            }
            if ((dim_F == null)) {
                throw new global::System.ArgumentNullException("dim_F");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(dim_F));
            }
            if ((dim_G == null)) {
                throw new global::System.ArgumentNullException("dim_G");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(dim_G));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Id, 
                    string dim_A, 
                    string dim_B, 
                    string dim_C, 
                    string dim_D, 
                    string dim_E, 
                    string dim_F, 
                    string dim_G, 
                    int Original_Id, 
                    string Original_dim_A, 
                    string Original_dim_B, 
                    string Original_dim_C, 
                    string Original_dim_D, 
                    string Original_dim_E, 
                    string Original_dim_F, 
                    string Original_dim_G) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(dim_E));
            }
            if ((dim_F == null)) {
                throw new global::System.ArgumentNullException("dim_F");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(dim_F));
            }
            if ((dim_G == null)) {
                throw new global::System.ArgumentNullException("dim_G");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(dim_G));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_dim_E));
            }
            if ((Original_dim_F == null)) {
                throw new global::System.ArgumentNullException("Original_dim_F");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_dim_F));
            }
            if ((Original_dim_G == null)) {
                throw new global::System.ArgumentNullException("Original_dim_G");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_dim_G));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, string dim_F, string dim_G, int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D, string Original_dim_E, string Original_dim_F, string Original_dim_G) {
            return this.Update(Original_Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G, Original_Id, Original_dim_A, Original_dim_B, Original_dim_C, Original_dim_D, Original_dim_E, Original_dim_F, Original_dim_G);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShaftDimensionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShaftDimensionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShaftDimensions";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("dim_A", "dim_A");
            tableMapping.ColumnMappings.Add("dim_B", "dim_B");
            tableMapping.ColumnMappings.Add("dim_C", "dim_C");
            tableMapping.ColumnMappings.Add("dim_D", "dim_D");
            tableMapping.ColumnMappings.Add("dim_E", "dim_E");
            tableMapping.ColumnMappings.Add("dim_F", "dim_F");
            tableMapping.ColumnMappings.Add("dim_G", "dim_G");
            tableMapping.ColumnMappings.Add("dim_H", "dim_H");
            tableMapping.ColumnMappings.Add("dim_I", "dim_I");
            tableMapping.ColumnMappings.Add("dim_J", "dim_J");
            tableMapping.ColumnMappings.Add("dim_K", "dim_K");
            tableMapping.ColumnMappings.Add("dim_L", "dim_L");
            tableMapping.ColumnMappings.Add("dim_M", "dim_M");
            tableMapping.ColumnMappings.Add("dim_N", "dim_N");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ShaftDimensions] WHERE (([Id] = @Original_Id) AND ([dim_A] = @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E) AND ([dim_F] = @Original_dim_F) AND ([dim_G] = @Original_dim_G) AND ([dim_H] = @Original_dim_H) AND ([dim_I] = @Original_dim_I) AND ([dim_J] = @Original_dim_J) AND ([dim_K] = @Original_dim_K) AND ([dim_L] = @Original_dim_L) AND ([dim_M] = @Original_dim_M) AND ([dim_N] = @Original_dim_N))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_H", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_H", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_I", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_I", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_J", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_J", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_K", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_K", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_L", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_L", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_M", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_M", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_N", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_N", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ShaftDimensions] ([Id], [dim_A], [dim_B], [dim_C], [dim_D], [dim_E], [dim_F], [dim_G], [dim_H], [dim_I], [dim_J], [dim_K], [dim_L], [dim_M], [dim_N]) VALUES (@Id, @dim_A, @dim_B, @dim_C, @dim_D, @dim_E, @dim_F, @dim_G, @dim_H, @dim_I, @dim_J, @dim_K, @dim_L, @dim_M, @dim_N);
SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G, dim_H, dim_I, dim_J, dim_K, dim_L, dim_M, dim_N FROM ShaftDimensions WHERE (Id = @Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_H", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_H", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_I", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_I", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_J", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_J", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_K", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_K", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_L", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_L", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_M", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_M", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_N", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_N", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ShaftDimensions] SET [Id] = @Id, [dim_A] = @dim_A, [dim_B] = @dim_B, [dim_C] = @dim_C, [dim_D] = @dim_D, [dim_E] = @dim_E, [dim_F] = @dim_F, [dim_G] = @dim_G, [dim_H] = @dim_H, [dim_I] = @dim_I, [dim_J] = @dim_J, [dim_K] = @dim_K, [dim_L] = @dim_L, [dim_M] = @dim_M, [dim_N] = @dim_N WHERE (([Id] = @Original_Id) AND ([dim_A] = @Original_dim_A) AND ([dim_B] = @Original_dim_B) AND ([dim_C] = @Original_dim_C) AND ([dim_D] = @Original_dim_D) AND ([dim_E] = @Original_dim_E) AND ([dim_F] = @Original_dim_F) AND ([dim_G] = @Original_dim_G) AND ([dim_H] = @Original_dim_H) AND ([dim_I] = @Original_dim_I) AND ([dim_J] = @Original_dim_J) AND ([dim_K] = @Original_dim_K) AND ([dim_L] = @Original_dim_L) AND ([dim_M] = @Original_dim_M) AND ([dim_N] = @Original_dim_N));
SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G, dim_H, dim_I, dim_J, dim_K, dim_L, dim_M, dim_N FROM ShaftDimensions WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_H", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_H", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_I", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_I", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_J", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_J", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_K", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_K", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_L", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_L", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_M", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_M", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dim_N", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_N", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_A", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_B", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_C", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_D", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_E", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_F", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_F", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_G", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_G", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_H", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_H", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_I", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_I", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_J", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_J", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_K", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_K", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_L", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_L", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_M", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_M", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dim_N", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dim_N", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ButterflyValveAPI.Properties.Settings.Default.Butterfly_Valve_DimensionsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G, dim_H, dim_I, dim_J, " +
                "dim_K, dim_L, dim_M, dim_N FROM dbo.ShaftDimensions";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Butterfly_Valve_DimensionsDataSet.ShaftDimensionsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Butterfly_Valve_DimensionsDataSet.ShaftDimensionsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Butterfly_Valve_DimensionsDataSet.ShaftDimensionsDataTable dataTable = new Butterfly_Valve_DimensionsDataSet.ShaftDimensionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet.ShaftDimensionsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Butterfly_Valve_DimensionsDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ShaftDimensions");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, string Original_dim_A, string Original_dim_B, string Original_dim_C, string Original_dim_D, string Original_dim_E, string Original_dim_F, string Original_dim_G, string Original_dim_H, string Original_dim_I, string Original_dim_J, string Original_dim_K, string Original_dim_L, string Original_dim_M, string Original_dim_N) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_dim_E));
            }
            if ((Original_dim_F == null)) {
                throw new global::System.ArgumentNullException("Original_dim_F");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_dim_F));
            }
            if ((Original_dim_G == null)) {
                throw new global::System.ArgumentNullException("Original_dim_G");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_dim_G));
            }
            if ((Original_dim_H == null)) {
                throw new global::System.ArgumentNullException("Original_dim_H");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_dim_H));
            }
            if ((Original_dim_I == null)) {
                throw new global::System.ArgumentNullException("Original_dim_I");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_dim_I));
            }
            if ((Original_dim_J == null)) {
                throw new global::System.ArgumentNullException("Original_dim_J");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_dim_J));
            }
            if ((Original_dim_K == null)) {
                throw new global::System.ArgumentNullException("Original_dim_K");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_dim_K));
            }
            if ((Original_dim_L == null)) {
                throw new global::System.ArgumentNullException("Original_dim_L");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_dim_L));
            }
            if ((Original_dim_M == null)) {
                throw new global::System.ArgumentNullException("Original_dim_M");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_dim_M));
            }
            if ((Original_dim_N == null)) {
                throw new global::System.ArgumentNullException("Original_dim_N");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_dim_N));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Id, string dim_A, string dim_B, string dim_C, string dim_D, string dim_E, string dim_F, string dim_G, string dim_H, string dim_I, string dim_J, string dim_K, string dim_L, string dim_M, string dim_N) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(dim_E));
            }
            if ((dim_F == null)) {
                throw new global::System.ArgumentNullException("dim_F");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(dim_F));
            }
            if ((dim_G == null)) {
                throw new global::System.ArgumentNullException("dim_G");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(dim_G));
            }
            if ((dim_H == null)) {
                throw new global::System.ArgumentNullException("dim_H");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(dim_H));
            }
            if ((dim_I == null)) {
                throw new global::System.ArgumentNullException("dim_I");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(dim_I));
            }
            if ((dim_J == null)) {
                throw new global::System.ArgumentNullException("dim_J");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(dim_J));
            }
            if ((dim_K == null)) {
                throw new global::System.ArgumentNullException("dim_K");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(dim_K));
            }
            if ((dim_L == null)) {
                throw new global::System.ArgumentNullException("dim_L");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(dim_L));
            }
            if ((dim_M == null)) {
                throw new global::System.ArgumentNullException("dim_M");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(dim_M));
            }
            if ((dim_N == null)) {
                throw new global::System.ArgumentNullException("dim_N");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(dim_N));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Id, 
                    string dim_A, 
                    string dim_B, 
                    string dim_C, 
                    string dim_D, 
                    string dim_E, 
                    string dim_F, 
                    string dim_G, 
                    string dim_H, 
                    string dim_I, 
                    string dim_J, 
                    string dim_K, 
                    string dim_L, 
                    string dim_M, 
                    string dim_N, 
                    int Original_Id, 
                    string Original_dim_A, 
                    string Original_dim_B, 
                    string Original_dim_C, 
                    string Original_dim_D, 
                    string Original_dim_E, 
                    string Original_dim_F, 
                    string Original_dim_G, 
                    string Original_dim_H, 
                    string Original_dim_I, 
                    string Original_dim_J, 
                    string Original_dim_K, 
                    string Original_dim_L, 
                    string Original_dim_M, 
                    string Original_dim_N) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id));
            if ((dim_A == null)) {
                throw new global::System.ArgumentNullException("dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(dim_A));
            }
            if ((dim_B == null)) {
                throw new global::System.ArgumentNullException("dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(dim_B));
            }
            if ((dim_C == null)) {
                throw new global::System.ArgumentNullException("dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(dim_C));
            }
            if ((dim_D == null)) {
                throw new global::System.ArgumentNullException("dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(dim_D));
            }
            if ((dim_E == null)) {
                throw new global::System.ArgumentNullException("dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(dim_E));
            }
            if ((dim_F == null)) {
                throw new global::System.ArgumentNullException("dim_F");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(dim_F));
            }
            if ((dim_G == null)) {
                throw new global::System.ArgumentNullException("dim_G");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(dim_G));
            }
            if ((dim_H == null)) {
                throw new global::System.ArgumentNullException("dim_H");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(dim_H));
            }
            if ((dim_I == null)) {
                throw new global::System.ArgumentNullException("dim_I");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(dim_I));
            }
            if ((dim_J == null)) {
                throw new global::System.ArgumentNullException("dim_J");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(dim_J));
            }
            if ((dim_K == null)) {
                throw new global::System.ArgumentNullException("dim_K");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(dim_K));
            }
            if ((dim_L == null)) {
                throw new global::System.ArgumentNullException("dim_L");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(dim_L));
            }
            if ((dim_M == null)) {
                throw new global::System.ArgumentNullException("dim_M");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(dim_M));
            }
            if ((dim_N == null)) {
                throw new global::System.ArgumentNullException("dim_N");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(dim_N));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_Id));
            if ((Original_dim_A == null)) {
                throw new global::System.ArgumentNullException("Original_dim_A");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_dim_A));
            }
            if ((Original_dim_B == null)) {
                throw new global::System.ArgumentNullException("Original_dim_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_dim_B));
            }
            if ((Original_dim_C == null)) {
                throw new global::System.ArgumentNullException("Original_dim_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_dim_C));
            }
            if ((Original_dim_D == null)) {
                throw new global::System.ArgumentNullException("Original_dim_D");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_dim_D));
            }
            if ((Original_dim_E == null)) {
                throw new global::System.ArgumentNullException("Original_dim_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_dim_E));
            }
            if ((Original_dim_F == null)) {
                throw new global::System.ArgumentNullException("Original_dim_F");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_dim_F));
            }
            if ((Original_dim_G == null)) {
                throw new global::System.ArgumentNullException("Original_dim_G");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_dim_G));
            }
            if ((Original_dim_H == null)) {
                throw new global::System.ArgumentNullException("Original_dim_H");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_dim_H));
            }
            if ((Original_dim_I == null)) {
                throw new global::System.ArgumentNullException("Original_dim_I");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_dim_I));
            }
            if ((Original_dim_J == null)) {
                throw new global::System.ArgumentNullException("Original_dim_J");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_dim_J));
            }
            if ((Original_dim_K == null)) {
                throw new global::System.ArgumentNullException("Original_dim_K");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_dim_K));
            }
            if ((Original_dim_L == null)) {
                throw new global::System.ArgumentNullException("Original_dim_L");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_dim_L));
            }
            if ((Original_dim_M == null)) {
                throw new global::System.ArgumentNullException("Original_dim_M");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_dim_M));
            }
            if ((Original_dim_N == null)) {
                throw new global::System.ArgumentNullException("Original_dim_N");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_dim_N));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string dim_A, 
                    string dim_B, 
                    string dim_C, 
                    string dim_D, 
                    string dim_E, 
                    string dim_F, 
                    string dim_G, 
                    string dim_H, 
                    string dim_I, 
                    string dim_J, 
                    string dim_K, 
                    string dim_L, 
                    string dim_M, 
                    string dim_N, 
                    int Original_Id, 
                    string Original_dim_A, 
                    string Original_dim_B, 
                    string Original_dim_C, 
                    string Original_dim_D, 
                    string Original_dim_E, 
                    string Original_dim_F, 
                    string Original_dim_G, 
                    string Original_dim_H, 
                    string Original_dim_I, 
                    string Original_dim_J, 
                    string Original_dim_K, 
                    string Original_dim_L, 
                    string Original_dim_M, 
                    string Original_dim_N) {
            return this.Update(Original_Id, dim_A, dim_B, dim_C, dim_D, dim_E, dim_F, dim_G, dim_H, dim_I, dim_J, dim_K, dim_L, dim_M, dim_N, Original_Id, Original_dim_A, Original_dim_B, Original_dim_C, Original_dim_D, Original_dim_E, Original_dim_F, Original_dim_G, Original_dim_H, Original_dim_I, Original_dim_J, Original_dim_K, Original_dim_L, Original_dim_M, Original_dim_N);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ArmDimensionsTableAdapter _armDimensionsTableAdapter;
        
        private BodyDimensionsTableAdapter _bodyDimensionsTableAdapter;
        
        private NutDimensionsTableAdapter _nutDimensionsTableAdapter;
        
        private PlateDimensionsTableAdapter _plateDimensionsTableAdapter;
        
        private RetainerDimensionsTableAdapter _retainerDimensionsTableAdapter;
        
        private ScrewDimensionsTableAdapter _screwDimensionsTableAdapter;
        
        private ShaftDimensionsTableAdapter _shaftDimensionsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ArmDimensionsTableAdapter ArmDimensionsTableAdapter {
            get {
                return this._armDimensionsTableAdapter;
            }
            set {
                this._armDimensionsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BodyDimensionsTableAdapter BodyDimensionsTableAdapter {
            get {
                return this._bodyDimensionsTableAdapter;
            }
            set {
                this._bodyDimensionsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public NutDimensionsTableAdapter NutDimensionsTableAdapter {
            get {
                return this._nutDimensionsTableAdapter;
            }
            set {
                this._nutDimensionsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PlateDimensionsTableAdapter PlateDimensionsTableAdapter {
            get {
                return this._plateDimensionsTableAdapter;
            }
            set {
                this._plateDimensionsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RetainerDimensionsTableAdapter RetainerDimensionsTableAdapter {
            get {
                return this._retainerDimensionsTableAdapter;
            }
            set {
                this._retainerDimensionsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ScrewDimensionsTableAdapter ScrewDimensionsTableAdapter {
            get {
                return this._screwDimensionsTableAdapter;
            }
            set {
                this._screwDimensionsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ShaftDimensionsTableAdapter ShaftDimensionsTableAdapter {
            get {
                return this._shaftDimensionsTableAdapter;
            }
            set {
                this._shaftDimensionsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._armDimensionsTableAdapter != null) 
                            && (this._armDimensionsTableAdapter.Connection != null))) {
                    return this._armDimensionsTableAdapter.Connection;
                }
                if (((this._bodyDimensionsTableAdapter != null) 
                            && (this._bodyDimensionsTableAdapter.Connection != null))) {
                    return this._bodyDimensionsTableAdapter.Connection;
                }
                if (((this._nutDimensionsTableAdapter != null) 
                            && (this._nutDimensionsTableAdapter.Connection != null))) {
                    return this._nutDimensionsTableAdapter.Connection;
                }
                if (((this._plateDimensionsTableAdapter != null) 
                            && (this._plateDimensionsTableAdapter.Connection != null))) {
                    return this._plateDimensionsTableAdapter.Connection;
                }
                if (((this._retainerDimensionsTableAdapter != null) 
                            && (this._retainerDimensionsTableAdapter.Connection != null))) {
                    return this._retainerDimensionsTableAdapter.Connection;
                }
                if (((this._screwDimensionsTableAdapter != null) 
                            && (this._screwDimensionsTableAdapter.Connection != null))) {
                    return this._screwDimensionsTableAdapter.Connection;
                }
                if (((this._shaftDimensionsTableAdapter != null) 
                            && (this._shaftDimensionsTableAdapter.Connection != null))) {
                    return this._shaftDimensionsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._armDimensionsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bodyDimensionsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._nutDimensionsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._plateDimensionsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._retainerDimensionsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._screwDimensionsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._shaftDimensionsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(Butterfly_Valve_DimensionsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._armDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ArmDimensions.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._armDimensionsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bodyDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BodyDimensions.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bodyDimensionsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._nutDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.NutDimensions.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._nutDimensionsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._plateDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PlateDimensions.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._plateDimensionsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._retainerDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RetainerDimensions.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._retainerDimensionsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._screwDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ScrewDimensions.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._screwDimensionsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._shaftDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ShaftDimensions.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._shaftDimensionsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(Butterfly_Valve_DimensionsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._armDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ArmDimensions.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._armDimensionsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bodyDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BodyDimensions.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bodyDimensionsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._nutDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.NutDimensions.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._nutDimensionsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._plateDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PlateDimensions.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._plateDimensionsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._retainerDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RetainerDimensions.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._retainerDimensionsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._screwDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ScrewDimensions.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._screwDimensionsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._shaftDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ShaftDimensions.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._shaftDimensionsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(Butterfly_Valve_DimensionsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._shaftDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ShaftDimensions.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._shaftDimensionsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._screwDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ScrewDimensions.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._screwDimensionsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._retainerDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RetainerDimensions.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._retainerDimensionsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._plateDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PlateDimensions.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._plateDimensionsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._nutDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.NutDimensions.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._nutDimensionsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bodyDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BodyDimensions.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bodyDimensionsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._armDimensionsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ArmDimensions.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._armDimensionsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(Butterfly_Valve_DimensionsDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._armDimensionsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._armDimensionsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bodyDimensionsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bodyDimensionsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._nutDimensionsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._nutDimensionsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._plateDimensionsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._plateDimensionsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._retainerDimensionsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._retainerDimensionsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._screwDimensionsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._screwDimensionsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._shaftDimensionsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._shaftDimensionsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._armDimensionsTableAdapter != null)) {
                    revertConnections.Add(this._armDimensionsTableAdapter, this._armDimensionsTableAdapter.Connection);
                    this._armDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._armDimensionsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._armDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._armDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._armDimensionsTableAdapter.Adapter);
                    }
                }
                if ((this._bodyDimensionsTableAdapter != null)) {
                    revertConnections.Add(this._bodyDimensionsTableAdapter, this._bodyDimensionsTableAdapter.Connection);
                    this._bodyDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bodyDimensionsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bodyDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bodyDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bodyDimensionsTableAdapter.Adapter);
                    }
                }
                if ((this._nutDimensionsTableAdapter != null)) {
                    revertConnections.Add(this._nutDimensionsTableAdapter, this._nutDimensionsTableAdapter.Connection);
                    this._nutDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._nutDimensionsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._nutDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._nutDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._nutDimensionsTableAdapter.Adapter);
                    }
                }
                if ((this._plateDimensionsTableAdapter != null)) {
                    revertConnections.Add(this._plateDimensionsTableAdapter, this._plateDimensionsTableAdapter.Connection);
                    this._plateDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._plateDimensionsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._plateDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._plateDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._plateDimensionsTableAdapter.Adapter);
                    }
                }
                if ((this._retainerDimensionsTableAdapter != null)) {
                    revertConnections.Add(this._retainerDimensionsTableAdapter, this._retainerDimensionsTableAdapter.Connection);
                    this._retainerDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._retainerDimensionsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._retainerDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._retainerDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._retainerDimensionsTableAdapter.Adapter);
                    }
                }
                if ((this._screwDimensionsTableAdapter != null)) {
                    revertConnections.Add(this._screwDimensionsTableAdapter, this._screwDimensionsTableAdapter.Connection);
                    this._screwDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._screwDimensionsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._screwDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._screwDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._screwDimensionsTableAdapter.Adapter);
                    }
                }
                if ((this._shaftDimensionsTableAdapter != null)) {
                    revertConnections.Add(this._shaftDimensionsTableAdapter, this._shaftDimensionsTableAdapter.Connection);
                    this._shaftDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._shaftDimensionsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._shaftDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._shaftDimensionsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._shaftDimensionsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._armDimensionsTableAdapter != null)) {
                    this._armDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._armDimensionsTableAdapter]));
                    this._armDimensionsTableAdapter.Transaction = null;
                }
                if ((this._bodyDimensionsTableAdapter != null)) {
                    this._bodyDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bodyDimensionsTableAdapter]));
                    this._bodyDimensionsTableAdapter.Transaction = null;
                }
                if ((this._nutDimensionsTableAdapter != null)) {
                    this._nutDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._nutDimensionsTableAdapter]));
                    this._nutDimensionsTableAdapter.Transaction = null;
                }
                if ((this._plateDimensionsTableAdapter != null)) {
                    this._plateDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._plateDimensionsTableAdapter]));
                    this._plateDimensionsTableAdapter.Transaction = null;
                }
                if ((this._retainerDimensionsTableAdapter != null)) {
                    this._retainerDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._retainerDimensionsTableAdapter]));
                    this._retainerDimensionsTableAdapter.Transaction = null;
                }
                if ((this._screwDimensionsTableAdapter != null)) {
                    this._screwDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._screwDimensionsTableAdapter]));
                    this._screwDimensionsTableAdapter.Transaction = null;
                }
                if ((this._shaftDimensionsTableAdapter != null)) {
                    this._shaftDimensionsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._shaftDimensionsTableAdapter]));
                    this._shaftDimensionsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591